{"ast":null,"code":"var _jsxFileName = \"E:\\\\Ipedge\\\\frontend\\\\src\\\\components\\\\employeeLeft.js\";\nimport React from 'react';\n\nclass EmployeeLeft extends React.Component {\n  render() {\n    let _this$props = this.props,\n        employees = _this$props.employees,\n        count = _this$props.count,\n        onClickEmployee = _this$props.onClickEmployee,\n        onClickPageNo = _this$props.onClickPageNo,\n        queryParams = _this$props.queryParams;\n    let employeeList = null;\n    let pageLink = [];\n    let PageSize = 5;\n\n    if (!!queryParams) {\n      pageNo = queryParams[\"PageNo\"];\n      PageSize = queryParams[\"PageSize\"];\n    }\n\n    console.log(queryParams);\n    let totalPageNo = Math.ceil(count / PageSize);\n\n    if (!!employees) {\n      console.log(\"count:\" + count);\n      employeeList = employees.map(employee => React.createElement(\"p\", {\n        key: employee.EmployeeID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"\",\n        onClick: () => onClickEmployee(employee.EmployeeID),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, employee.EmployeeNumber, \" \", employee.FirstName, \" \", employee.LastName)));\n\n      for (let i = 0; i < pageNo; i++) {\n        pageLink.push(React.createElement(\"a\", {\n          href: \"\",\n          onClick: () => onClickPageNo(PageSize, i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \" \", i + 1, \" \"));\n      }\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, employeeList, React.createElement(\"div\", {\n      id: \"pg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, pageLink));\n  }\n\n}\n\nexport { EmployeeLeft };","map":{"version":3,"sources":["E:\\Ipedge\\frontend\\src\\components\\employeeLeft.js"],"names":["React","EmployeeLeft","Component","render","props","employees","count","onClickEmployee","onClickPageNo","queryParams","employeeList","pageLink","PageSize","pageNo","console","log","totalPageNo","Math","ceil","map","employee","EmployeeID","EmployeeNumber","FirstName","LastName","i","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA2C;AACvCC,EAAAA,MAAM,GAAG;AAAA,sBACmE,KAAKC,KADxE;AAAA,QACCC,SADD,eACCA,SADD;AAAA,QACYC,KADZ,eACYA,KADZ;AAAA,QACmBC,eADnB,eACmBA,eADnB;AAAA,QACoCC,aADpC,eACoCA,aADpC;AAAA,QACmDC,WADnD,eACmDA,WADnD;AAEL,QAAIC,YAAY,GAAG,IAAnB;AAGA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,QAAQ,GAAG,CAAf;;AACA,QAAG,CAAC,CAACH,WAAL,EAAkB;AACdI,MAAAA,MAAM,GAAGJ,WAAW,CAAC,QAAD,CAApB;AACAG,MAAAA,QAAQ,GAAGH,WAAW,CAAC,UAAD,CAAtB;AACH;;AACDK,IAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACA,QAAIO,WAAW,GAAGC,IAAI,CAACC,IAAL,CAAUZ,KAAK,GAAGM,QAAlB,CAAlB;;AAEA,QAAI,CAAC,CAACP,SAAN,EAAiB;AACbS,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWT,KAAvB;AACAI,MAAAA,YAAY,GAAGL,SAAS,CAACc,GAAV,CAAeC,QAAD,IACzB;AAAG,QAAA,GAAG,EAAEA,QAAQ,CAACC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,IAAI,EAAC,EAAR;AAAW,QAAA,OAAO,EAAE,MAAMd,eAAe,CAACa,QAAQ,CAACC,UAAV,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,QAAQ,CAACE,cADd,OAC+BF,QAAQ,CAACG,SADxC,OACoDH,QAAQ,CAACI,QAD7D,CADJ,CADW,CAAf;;AAMA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,MAApB,EAA4BY,CAAC,EAA7B,EAAiC;AAC7Bd,QAAAA,QAAQ,CAACe,IAAT,CACI;AAAG,UAAA,IAAI,EAAC,EAAR;AAAW,UAAA,OAAO,EAAE,MAAMlB,aAAa,CAACI,QAAD,EAAWa,CAAX,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAyDA,CAAC,GAAG,CAA7D,MADJ;AAGH;AACJ;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKf,YADL,EAEI;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcC,QAAd,CAFJ,CADJ;AAOH;;AApCsC;;AAuC3C,SAASV,YAAT","sourcesContent":["import React from 'react';\r\n\r\nclass EmployeeLeft extends React.Component {\r\n    render() {\r\n        let { employees, count, onClickEmployee, onClickPageNo, queryParams } = this.props;\r\n        let employeeList = null;\r\n\r\n\r\n        let pageLink = [];\r\n        let PageSize = 5;\r\n        if(!!queryParams) {\r\n            pageNo = queryParams[\"PageNo\"]\r\n            PageSize = queryParams[\"PageSize\"]\r\n        }\r\n        console.log(queryParams);\r\n        let totalPageNo = Math.ceil(count / PageSize);\r\n\r\n        if (!!employees) {\r\n            console.log(\"count:\" + count);\r\n            employeeList = employees.map((employee) => (\r\n                <p key={employee.EmployeeID}>\r\n                    <a href='' onClick={() => onClickEmployee(employee.EmployeeID)}>\r\n                        {employee.EmployeeNumber} {employee.FirstName} {employee.LastName}</a>\r\n                </p>\r\n            ));\r\n            for (let i = 0; i < pageNo; i++) {\r\n                pageLink.push(\r\n                    <a href='' onClick={() => onClickPageNo(PageSize, i)} > {i + 1} </a>\r\n                );\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                {employeeList}\r\n                <div id='pg'>{pageLink}</div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { EmployeeLeft }"]},"metadata":{},"sourceType":"module"}