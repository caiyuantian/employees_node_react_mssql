{"ast":null,"code":"import _objectSpread from \"E:\\\\projects\\\\redux_demo2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport actionTypes from '../actionTypes';\nconst initialState = {\n  userInfo: {}\n};\n\nconst countryList = data => {\n  var lookup = {};\n  var items = data;\n  var result = [];\n\n  for (var item, i = 0; item = items[i++];) {\n    var country = item.address.country;\n\n    if (!(country in lookup)) {\n      lookup[country] = 1;\n      result.push(country);\n    }\n  }\n\n  return result;\n};\n\nconst cityList = data => {\n  var lookup = {};\n  var items = data;\n  var result = [];\n\n  for (var item, i = 0; item = items[i++];) {\n    var city = item.address.city;\n\n    if (!(city in lookup)) {\n      lookup[city] = 1;\n      result.push(city);\n    }\n  }\n\n  return result;\n};\n\nconst initLoadReducer = (state = initialState, action) => {\n  let userInfo = state.userInfo;\n  let data = state.data;\n\n  switch (action.type) {\n    case actionTypes.FEATCH_USER_OK:\n      return _objectSpread({}, state, {\n        userInfo: action.user\n      });\n\n    case actionTypes.FEATCH_DATA_OK:\n      countryList(action.data);\n      cityList(action.data);\n      return _objectSpread({}, state, {\n        data: action.data,\n        city\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default initLoadReducer;","map":{"version":3,"sources":["E:\\projects\\redux_demo2\\src\\reducers\\initLoadReducer.js"],"names":["actionTypes","initialState","userInfo","countryList","data","lookup","items","result","item","i","country","address","push","cityList","city","initLoadReducer","state","action","type","FEATCH_USER_OK","user","FEATCH_DATA_OK"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAArB;;AAIA,MAAMC,WAAW,GAAIC,IAAD,IAAU;AAC1B,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,KAAK,GAAGF,IAAZ;AACA,MAAIG,MAAM,GAAG,EAAb;;AAEA,OAAK,IAAIC,IAAJ,EAAUC,CAAC,GAAG,CAAnB,EAAsBD,IAAI,GAAGF,KAAK,CAACG,CAAC,EAAF,CAAlC,GAA0C;AACtC,QAAIC,OAAO,GAAGF,IAAI,CAACG,OAAL,CAAaD,OAA3B;;AAEA,QAAI,EAAEA,OAAO,IAAIL,MAAb,CAAJ,EAA0B;AACtBA,MAAAA,MAAM,CAACK,OAAD,CAAN,GAAkB,CAAlB;AACAH,MAAAA,MAAM,CAACK,IAAP,CAAYF,OAAZ;AACH;AACJ;;AACD,SAAOH,MAAP;AACH,CAdD;;AAgBA,MAAMM,QAAQ,GAAIT,IAAD,IAAU;AACvB,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,KAAK,GAAGF,IAAZ;AACA,MAAIG,MAAM,GAAG,EAAb;;AAEA,OAAK,IAAIC,IAAJ,EAAUC,CAAC,GAAG,CAAnB,EAAsBD,IAAI,GAAGF,KAAK,CAACG,CAAC,EAAF,CAAlC,GAA0C;AACtC,QAAIK,IAAI,GAAGN,IAAI,CAACG,OAAL,CAAaG,IAAxB;;AAEA,QAAI,EAAEA,IAAI,IAAIT,MAAV,CAAJ,EAAuB;AACnBA,MAAAA,MAAM,CAACS,IAAD,CAAN,GAAe,CAAf;AACAP,MAAAA,MAAM,CAACK,IAAP,CAAYE,IAAZ;AACH;AACJ;;AACD,SAAOP,MAAP;AACH,CAdD;;AAgBA,MAAMQ,eAAe,GAAG,CAACC,KAAK,GAAGf,YAAT,EAAuBgB,MAAvB,KAAkC;AACtD,MAAIf,QAAQ,GAAGc,KAAK,CAACd,QAArB;AACA,MAAIE,IAAI,GAAGY,KAAK,CAACZ,IAAjB;;AACA,UAAQa,MAAM,CAACC,IAAf;AACI,SAAKlB,WAAW,CAACmB,cAAjB;AACI,+BAAYH,KAAZ;AAAmBd,QAAAA,QAAQ,EAAEe,MAAM,CAACG;AAApC;;AACJ,SAAKpB,WAAW,CAACqB,cAAjB;AACIlB,MAAAA,WAAW,CAACc,MAAM,CAACb,IAAR,CAAX;AACAS,MAAAA,QAAQ,CAACI,MAAM,CAACb,IAAR,CAAR;AACA,+BAAYY,KAAZ;AAAmBZ,QAAAA,IAAI,EAAEa,MAAM,CAACb,IAAhC;AAAsCU,QAAAA;AAAtC;;AACJ;AACI,aAAOE,KAAP;AARR;AAUH,CAbD;;AAeA,eAAeD,eAAf","sourcesContent":["import actionTypes from '../actionTypes'\r\n\r\nconst initialState = {\r\n    userInfo: {}\r\n}\r\n\r\nconst countryList = (data) => {\r\n    var lookup = {};\r\n    var items = data;\r\n    var result = [];\r\n\r\n    for (var item, i = 0; item = items[i++];) {\r\n        var country = item.address.country;\r\n\r\n        if (!(country in lookup)) {\r\n            lookup[country] = 1;\r\n            result.push(country);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nconst cityList = (data) => {\r\n    var lookup = {};\r\n    var items = data;\r\n    var result = [];\r\n\r\n    for (var item, i = 0; item = items[i++];) {\r\n        var city = item.address.city;\r\n\r\n        if (!(city in lookup)) {\r\n            lookup[city] = 1;\r\n            result.push(city);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nconst initLoadReducer = (state = initialState, action) => {\r\n    let userInfo = state.userInfo;\r\n    let data = state.data;\r\n    switch (action.type) {\r\n        case actionTypes.FEATCH_USER_OK:\r\n            return { ...state, userInfo: action.user };\r\n        case actionTypes.FEATCH_DATA_OK:\r\n            countryList(action.data)\r\n            cityList(action.data)\r\n            return { ...state, data: action.data, city };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default initLoadReducer;"]},"metadata":{},"sourceType":"module"}