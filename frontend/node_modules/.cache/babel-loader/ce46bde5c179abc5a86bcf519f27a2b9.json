{"ast":null,"code":"var _jsxFileName = \"E:\\\\Ipedge\\\\frontend\\\\src\\\\components\\\\createEmployee.js\";\nimport React from 'react';\nimport store from '../store';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport actionTypes from '../actionTypes';\nimport { onCreateEmployee } from '../actions';\n\nclass CreateEmployee extends React.Component {\n  componentDidMount() {\n    let pathname = this.props.location.pathname;\n    let EmployeeID = pathname.substring(pathname.lastIndexOf('/') + 1);\n    store.dispatch({\n      type: actionTypes.CREATE_EMPLOYEE_FETCH_ROLES_ASYNC\n    });\n  }\n\n  render() {\n    let _this$props = this.props,\n        roles = _this$props.roles,\n        onCreateEmployee = _this$props.onCreateEmployee;\n    let roleList = '';\n\n    if (!!roles) {\n      //console.log(JSON.stringify(roles))\n      roleList = roles.map(role => React.createElement(\"option\", {\n        key: role.RoleID,\n        value: role.RoleID,\n        text: role.RoleName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, role.RoleName));\n    }\n\n    let detailItems = React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Employee Number:\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"EmployeeNumber\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"First Name:\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"FirstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), \" \")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Last Name:\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"LastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), \" \")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Extension:\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"Extension\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"RoleName:\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      id: \"RoleID\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), roleList))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        //alert([\"Employee record updated!\", \"test\"]);\n        var answer = window.confirm(\"Save changes?\");\n\n        if (answer) {\n          return onCreateEmployee(document.getElementById(\"EmployeeNumber\").value, document.getElementById(\"FirstName\").value, document.getElementById(\"LastName\").value, document.getElementById(\"Extension\").value, document.getElementById(\"RoleID\").value);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Create\")))));\n    return React.createElement(\"div\", {\n      id: \"employee-detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, detailItems);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  let roles = state.dataReducer.roles;\n  return {\n    roles: roles\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onCreateEmployee: bindActionCreators(onCreateEmployee, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateEmployee);","map":{"version":3,"sources":["E:\\Ipedge\\frontend\\src\\components\\createEmployee.js"],"names":["React","store","bindActionCreators","connect","actionTypes","onCreateEmployee","CreateEmployee","Component","componentDidMount","pathname","props","location","EmployeeID","substring","lastIndexOf","dispatch","type","CREATE_EMPLOYEE_FETCH_ROLES_ASYNC","render","roles","roleList","map","role","RoleID","RoleName","detailItems","answer","window","confirm","document","getElementById","value","mapStateToProps","state","dataReducer","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport store from '../store'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport actionTypes from '../actionTypes'\r\nimport { onCreateEmployee } from '../actions'\r\n\r\nclass CreateEmployee extends React.Component {\r\n    componentDidMount() {\r\n        let pathname = this.props.location.pathname\r\n        let EmployeeID = pathname.substring(pathname.lastIndexOf('/') + 1);\r\n        store.dispatch({ type: actionTypes.CREATE_EMPLOYEE_FETCH_ROLES_ASYNC });\r\n    }\r\n    render() {\r\n        let { roles, onCreateEmployee } = this.props;\r\n\r\n        let roleList = '';\r\n\r\n        if (!!roles) {\r\n            //console.log(JSON.stringify(roles))\r\n            roleList = roles.map(role => (\r\n                <option key={role.RoleID} value={role.RoleID} text={role.RoleName}>{role.RoleName}</option>\r\n            ));\r\n        }\r\n\r\n        let detailItems = (\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Employee Number:</td>\r\n                        <td><input id=\"EmployeeNumber\"></input></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>First Name:</td>\r\n                        <td><input id=\"FirstName\"></input> </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Last Name:</td>\r\n                        <td><input id=\"LastName\"></input> </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Extension:</td>\r\n                        <td><input id=\"Extension\"></input></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>RoleName:</td>\r\n                        <td>\r\n                            <select id=\"RoleID\">\r\n                                <option value=''></option>\r\n                                {roleList}\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan=\"2\">\r\n                            <button onClick={() => {\r\n                                //alert([\"Employee record updated!\", \"test\"]);\r\n                                var answer = window.confirm(\"Save changes?\")\r\n                                if (answer) {\r\n                                    return onCreateEmployee(\r\n                                        document.getElementById(\"EmployeeNumber\").value,\r\n                                        document.getElementById(\"FirstName\").value,\r\n                                        document.getElementById(\"LastName\").value,\r\n                                        document.getElementById(\"Extension\").value,\r\n                                        document.getElementById(\"RoleID\").value,\r\n                                    )\r\n                                }\r\n                            }}>Create</button>\r\n\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>);\r\n        return (\r\n            <div id=\"employee-detail\">\r\n                {detailItems}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let { roles } = state.dataReducer\r\n    return {\r\n        roles: roles\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onCreateEmployee: bindActionCreators(onCreateEmployee, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateEmployee)"]},"metadata":{},"sourceType":"module"}