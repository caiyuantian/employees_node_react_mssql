{"ast":null,"code":"import { put, takeEvery, call } from 'redux-saga/effects';\nimport actionTypes from '../actionTypes';\nexport function* fetchEmployeeTobeUpdateAsync(action) {\n  let EmployeeID = action.EmployeeID;\n\n  try {\n    //console.log('http://localhost:5000/api/v1/employee/'+EmployeeID);\n    const response = yield call(fetch, 'http://localhost:5000/api/v1/employee/' + EmployeeID);\n    const employee = yield call([response, 'json']);\n\n    if (!!employee) {\n      yield put({\n        type: actionTypes.FEATCH_EMPLOYEE_TOBE_CHANGE_OK,\n        employeeTobeChange: employee\n      });\n    } //return data[0].usernameName;\n\n  } catch (e) {\n    console.log(e); //return null;\n  }\n}\nexport function* fetchRoleAsync() {\n  try {\n    const response = yield call(fetch, 'http://localhost:5000/api/v1/roles');\n    const roles = yield call([response, 'json']);\n\n    if (!!roles) {\n      yield put({\n        type: actionTypes.FEATCH_ROLES_OK,\n        roles: roles\n      });\n    }\n  } catch (e) {\n    console.log(e);\n  }\n}\nexport function* updateEmployeeAsync(action) {\n  let data = {\n    EmployeeID: action.EmployeeID,\n    EmployeeNumber: action.EmployeeNumber,\n    FirstName: action.FirstName,\n    LastName: action.LastName,\n    Extension: action.Extension,\n    RoleID: action.RoleID\n  };\n  console.log(JSON.stringify(data));\n\n  try {\n    const response = yield call(fetch, 'http://localhost:5000/api/v1/employee/' + action.EmployeeID, {\n      body: JSON.stringify(data),\n      method: 'PUT'\n    });\n    const updateResult = yield call([response, 'json']);\n    console.log(JSON.stringify(updateResult));\n  } catch (e) {\n    console.log(e);\n  }\n}\nexport function* watchClickChangeEmployee() {\n  yield takeEvery(actionTypes.FETCH_EMPLOYEE_TOBE_UPDATE_ASYNC, fetchRoleAsync);\n  yield takeEvery(actionTypes.FETCH_EMPLOYEE_TOBE_UPDATE_ASYNC, fetchEmployeeTobeUpdateAsync);\n  yield takeEvery(actionTypes.UPDATE_EMPLOYEE_ASYNC, updateEmployeeAsync);\n}","map":{"version":3,"sources":["E:\\Ipedge\\frontend\\src\\sagas\\changeEmployee.js"],"names":["put","takeEvery","call","actionTypes","fetchEmployeeTobeUpdateAsync","action","EmployeeID","response","fetch","employee","type","FEATCH_EMPLOYEE_TOBE_CHANGE_OK","employeeTobeChange","e","console","log","fetchRoleAsync","roles","FEATCH_ROLES_OK","updateEmployeeAsync","data","EmployeeNumber","FirstName","LastName","Extension","RoleID","JSON","stringify","body","method","updateResult","watchClickChangeEmployee","FETCH_EMPLOYEE_TOBE_UPDATE_ASYNC","UPDATE_EMPLOYEE_ASYNC"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAGA,OAAO,UAAUC,4BAAV,CAAuCC,MAAvC,EAA+C;AAClD,MAAIC,UAAU,GAAGD,MAAM,CAACC,UAAxB;;AACA,MAAI;AACA;AACA,UAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,KAAD,EAAQ,2CAAyCF,UAAjD,CAA3B;AACA,UAAMG,QAAQ,GAAG,MAAMP,IAAI,CAAC,CAACK,QAAD,EAAW,MAAX,CAAD,CAA3B;;AACA,QAAI,CAAC,CAACE,QAAN,EAAgB;AACZ,YAAMT,GAAG,CAAC;AAAEU,QAAAA,IAAI,EAAEP,WAAW,CAACQ,8BAApB;AAAoDC,QAAAA,kBAAkB,EAAEH;AAAxE,OAAD,CAAT;AACH,KAND,CAOA;;AACH,GARD,CAQE,OAAOI,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ,EADQ,CAER;AACH;AACJ;AAED,OAAO,UAAUG,cAAV,GAA2B;AAC9B,MAAI;AACA,UAAMT,QAAQ,GAAG,MAAML,IAAI,CAACM,KAAD,EAAQ,oCAAR,CAA3B;AACA,UAAMS,KAAK,GAAG,MAAMf,IAAI,CAAC,CAACK,QAAD,EAAW,MAAX,CAAD,CAAxB;;AACA,QAAI,CAAC,CAACU,KAAN,EAAa;AACT,YAAMjB,GAAG,CAAC;AAAEU,QAAAA,IAAI,EAAEP,WAAW,CAACe,eAApB;AAAqCD,QAAAA,KAAK,EAAEA;AAA5C,OAAD,CAAT;AACH;AACJ,GAND,CAME,OAAOJ,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ;AAGD,OAAO,UAAUM,mBAAV,CAA8Bd,MAA9B,EAAsC;AACzC,MAAIe,IAAI,GAAG;AACPd,IAAAA,UAAU,EAAED,MAAM,CAACC,UADZ;AAEPe,IAAAA,cAAc,EAAEhB,MAAM,CAACgB,cAFhB;AAGPC,IAAAA,SAAS,EAAEjB,MAAM,CAACiB,SAHX;AAIPC,IAAAA,QAAQ,EAAElB,MAAM,CAACkB,QAJV;AAKPC,IAAAA,SAAS,EAAEnB,MAAM,CAACmB,SALX;AAMPC,IAAAA,MAAM,EAAEpB,MAAM,CAACoB;AANR,GAAX;AAQAX,EAAAA,OAAO,CAACC,GAAR,CAAYW,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAZ;;AACA,MAAI;AACA,UAAMb,QAAQ,GAAG,MAAML,IAAI,CAACM,KAAD,EAAQ,2CAAyCH,MAAM,CAACC,UAAxD,EAC1B;AAACsB,MAAAA,IAAI,EAAEF,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAP;AAA6BS,MAAAA,MAAM,EAAE;AAArC,KAD0B,CAA3B;AAEA,UAAMC,YAAY,GAAG,MAAM5B,IAAI,CAAC,CAACK,QAAD,EAAW,MAAX,CAAD,CAA/B;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYW,IAAI,CAACC,SAAL,CAAeG,YAAf,CAAZ;AAEH,GAND,CAME,OAAOjB,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ;AAGD,OAAO,UAAUkB,wBAAV,GAAqC;AACxC,QAAM9B,SAAS,CAACE,WAAW,CAAC6B,gCAAb,EAA+ChB,cAA/C,CAAf;AACA,QAAMf,SAAS,CAACE,WAAW,CAAC6B,gCAAb,EAA+C5B,4BAA/C,CAAf;AACA,QAAMH,SAAS,CAACE,WAAW,CAAC8B,qBAAb,EAAoCd,mBAApC,CAAf;AAEH","sourcesContent":["import { put, takeEvery, call } from 'redux-saga/effects'\r\nimport actionTypes from '../actionTypes'\r\n\r\n\r\nexport function* fetchEmployeeTobeUpdateAsync(action) {\r\n    let EmployeeID = action.EmployeeID;\r\n    try {\r\n        //console.log('http://localhost:5000/api/v1/employee/'+EmployeeID);\r\n        const response = yield call(fetch, 'http://localhost:5000/api/v1/employee/'+EmployeeID);\r\n        const employee = yield call([response, 'json']);\r\n        if (!!employee) {\r\n            yield put({ type: actionTypes.FEATCH_EMPLOYEE_TOBE_CHANGE_OK, employeeTobeChange: employee});\r\n        }\r\n        //return data[0].usernameName;\r\n    } catch (e) {\r\n        console.log(e);\r\n        //return null;\r\n    }\r\n}\r\n\r\nexport function* fetchRoleAsync() {\r\n    try {\r\n        const response = yield call(fetch, 'http://localhost:5000/api/v1/roles');\r\n        const roles = yield call([response, 'json']);\r\n        if (!!roles) {\r\n            yield put({ type: actionTypes.FEATCH_ROLES_OK, roles: roles});\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n\r\nexport function* updateEmployeeAsync(action) {\r\n    let data = {\r\n        EmployeeID: action.EmployeeID,\r\n        EmployeeNumber: action.EmployeeNumber,\r\n        FirstName: action.FirstName,\r\n        LastName: action.LastName,\r\n        Extension: action.Extension,\r\n        RoleID: action.RoleID\r\n    }\r\n    console.log(JSON.stringify(data));\r\n    try {\r\n        const response = yield call(fetch, 'http://localhost:5000/api/v1/employee/'+action.EmployeeID,\r\n         {body: JSON.stringify(data), method: 'PUT'});\r\n        const updateResult = yield call([response, 'json']);\r\n        console.log(JSON.stringify(updateResult));\r\n\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n\r\nexport function* watchClickChangeEmployee() {\r\n    yield takeEvery(actionTypes.FETCH_EMPLOYEE_TOBE_UPDATE_ASYNC, fetchRoleAsync);\r\n    yield takeEvery(actionTypes.FETCH_EMPLOYEE_TOBE_UPDATE_ASYNC, fetchEmployeeTobeUpdateAsync);\r\n    yield takeEvery(actionTypes.UPDATE_EMPLOYEE_ASYNC, updateEmployeeAsync);\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}