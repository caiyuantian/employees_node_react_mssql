{"ast":null,"code":"import _objectSpread from \"E:\\\\projects\\\\redux_demo2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"E:\\\\projects\\\\redux_demo2\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider, connect } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\n\nclass Counter extends React.Component {\n  render() {\n    let _this$props = this.props,\n        value = _this$props.value,\n        onClickAdd = _this$props.onClickAdd,\n        onClickSubstract = _this$props.onClickSubstract;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"text\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, value), React.createElement(\"button\", {\n      onClick: onClickAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"\\u52A01\"), React.createElement(\"button\", {\n      onClick: onClickSubstract,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"\\u51CF1\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    value: state.value\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClickAdd: dispatch({\n      type: \"CLICK_ADD\"\n    }),\n    onClickSubstract: dispatch({\n      type: \"CLICK_SUBSTRACT\"\n    })\n  };\n};\n\nconst Example = connect(mapStateToProps, mapDispatchToProps)(Counter);\n\nconst myReducer = (state = {\n  value: 0\n}, action) => {\n  let value = state.value;\n\n  switch (action.type) {\n    case \"CLICK_ADD\":\n      return _objectSpread({}, state, {\n        value: value + 1\n      });\n\n    case \"CLICK_SUBSTRACT\":\n      return _objectSpread({}, state, {\n        value: value - 1\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar store = createStore(myReducer);\nReactDOM.render(React.createElement(\"provider\", {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, React.createElement(Example, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["E:\\projects\\redux_demo2\\src\\index.js"],"names":["React","ReactDOM","App","serviceWorker","Provider","connect","createStore","combineReducers","Counter","Component","render","props","value","onClickAdd","onClickSubstract","mapStateToProps","state","mapDispatchToProps","dispatch","type","Example","myReducer","action","store","document","getElementById","unregister"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,aAAlC;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;;AAGA,MAAMC,OAAN,SAAsBR,KAAK,CAACS,SAA5B,CAAsC;AAClCC,EAAAA,MAAM,GAAG;AAAA,sBACyC,KAAKC,KAD9C;AAAA,QACCC,KADD,eACCA,KADD;AAAA,QACQC,UADR,eACQA,UADR;AAAA,QACoBC,gBADpB,eACoBA,gBADpB;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOF,KAAP,CADJ,EAEI;AAAQ,MAAA,OAAO,EAAEC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAGI;AAAQ,MAAA,OAAO,EAAEC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,CADJ;AAOH;;AAViC;;AAatC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AAAEJ,IAAAA,KAAK,EAAEI,KAAK,CAACJ;AAAf,GAAP;AACH,CAFD;;AAIA,MAAMK,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHL,IAAAA,UAAU,EAAEK,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CADjB;AAEHL,IAAAA,gBAAgB,EAAEI,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD;AAFvB,GAAP;AAIH,CALD;;AAOA,MAAMC,OAAO,GAAGf,OAAO,CACnBU,eADmB,EAEnBE,kBAFmB,CAAP,CAGdT,OAHc,CAAhB;;AAKA,MAAMa,SAAS,GAAG,CAACL,KAAK,GAAG;AAAEJ,EAAAA,KAAK,EAAE;AAAT,CAAT,EAAuBU,MAAvB,KAAkC;AAChD,MAAIV,KAAK,GAAGI,KAAK,CAACJ,KAAlB;;AACA,UAAQU,MAAM,CAACH,IAAf;AACI,SAAK,WAAL;AACI,+BAAYH,KAAZ;AAAmBJ,QAAAA,KAAK,EAAEA,KAAK,GAAG;AAAlC;;AACJ,SAAK,iBAAL;AACI,+BAAYI,KAAZ;AAAmBJ,QAAAA,KAAK,EAAEA,KAAK,GAAG;AAAlC;;AACJ;AACI,aAAOI,KAAP;AANR;AAQH,CAVD;;AAYA,IAAIO,KAAK,GAAGjB,WAAW,CAACe,SAAD,CAAvB;AAEApB,QAAQ,CAACS,MAAT,CACI;AAAU,EAAA,KAAK,EAAEa,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,EAGiBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAHjB,E,CAKA;AACA;AACA;;AACAtB,aAAa,CAACuB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider, connect } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\n\n\nclass Counter extends React.Component {\n    render() {\n        let { value, onClickAdd, onClickSubstract } = this.props;\n        return (\n            <div>\n                <text>{value}</text>\n                <button onClick={onClickAdd}>加1</button>\n                <button onClick={onClickSubstract}>减1</button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { value: state.value };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onClickAdd: dispatch({ type: \"CLICK_ADD\" }),\n        onClickSubstract: dispatch({ type: \"CLICK_SUBSTRACT\" })\n    }\n}\n\nconst Example = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Counter);\n\nconst myReducer = (state = { value: 0 }, action) => {\n    let value = state.value;\n    switch (action.type) {\n        case \"CLICK_ADD\":\n            return { ...state, value: value + 1 };\n        case \"CLICK_SUBSTRACT\":\n            return { ...state, value: value - 1 };\n        default:\n            return state;\n    }\n}\n\nvar store = createStore(myReducer);\n\nReactDOM.render(\n    <provider store={store}>\n        <Example />\n    </provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}