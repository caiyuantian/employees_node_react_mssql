{"ast":null,"code":"import _objectSpread from \"E:\\\\Ipedge\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport actionTypes from '../actionTypes';\nimport store from '../store';\nimport { loadState, saveState } from '../store/localStorage';\nconst initialState = {\n  employees: [],\n  roles: [],\n  selectedEmployee: {}\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FEATCH_EMPLOYEES_OK:\n      state = _objectSpread({}, state, {\n        employees: action.employees.employees,\n        pageInfo: action.employees.pageInfo\n      });\n      store.subscribe(() => {\n        saveState({\n          state: state\n        });\n      });\n      return state;\n\n    case actionTypes.FEATCH_ROLES_OK:\n      return _objectSpread({}, state, {\n        roles: action.roles\n      });\n\n    case actionTypes.FEATCH_SELECTED_EMPLOYEE_OK:\n      return _objectSpread({}, state, {\n        selectedEmployee: action.selectedEmployee\n      });\n\n    case actionTypes.FEATCH_EMPLOYEE_TOBE_CHANGE_OK:\n      return _objectSpread({}, state, {\n        employeeTobeChange: action.employeeTobeChange\n      });\n\n    case actionTypes.FEATCH_EMPLOYEE_FOR_DISPLAY_OK:\n      return _objectSpread({}, state, {\n        employeeForDisplay: action.employeeForDisplay\n      });\n\n    case actionTypes.CHANGE_FILTER:\n      return _objectSpread({}, state, {\n        filters: action.filters\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;","map":{"version":3,"sources":["E:\\Ipedge\\frontend\\src\\reducers\\dataReducer.js"],"names":["actionTypes","store","loadState","saveState","initialState","employees","roles","selectedEmployee","dataReducer","state","action","type","FEATCH_EMPLOYEES_OK","pageInfo","subscribe","FEATCH_ROLES_OK","FEATCH_SELECTED_EMPLOYEE_OK","FEATCH_EMPLOYEE_TOBE_CHANGE_OK","employeeTobeChange","FEATCH_EMPLOYEE_FOR_DISPLAY_OK","employeeForDisplay","CHANGE_FILTER","filters"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAAQC,SAAR,EAAmBC,SAAnB,QAAmC,uBAAnC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,gBAAgB,EAAE;AAHD,CAArB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAElD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,WAAW,CAACY,mBAAjB;AACIH,MAAAA,KAAK,qBAAQA,KAAR;AAAeJ,QAAAA,SAAS,EAAEK,MAAM,CAACL,SAAP,CAAiBA,SAA3C;AAAsDQ,QAAAA,QAAQ,EAAEH,MAAM,CAACL,SAAP,CAAiBQ;AAAjF,QAAL;AACAZ,MAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AAClBX,QAAAA,SAAS,CAAC;AACNM,UAAAA,KAAK,EAAEA;AADD,SAAD,CAAT;AAGH,OAJD;AAKA,aAAOA,KAAP;;AACJ,SAAKT,WAAW,CAACe,eAAjB;AACI,+BAAYN,KAAZ;AAAmBH,QAAAA,KAAK,EAAEI,MAAM,CAACJ;AAAjC;;AACJ,SAAKN,WAAW,CAACgB,2BAAjB;AACI,+BAAYP,KAAZ;AAAmBF,QAAAA,gBAAgB,EAAEG,MAAM,CAACH;AAA5C;;AACJ,SAAKP,WAAW,CAACiB,8BAAjB;AACI,+BAAYR,KAAZ;AAAmBS,QAAAA,kBAAkB,EAAER,MAAM,CAACQ;AAA9C;;AACJ,SAAKlB,WAAW,CAACmB,8BAAjB;AACI,+BAAYV,KAAZ;AAAmBW,QAAAA,kBAAkB,EAAEV,MAAM,CAACU;AAA9C;;AACJ,SAAKpB,WAAW,CAACqB,aAAjB;AACI,+BAAYZ,KAAZ;AAAmBa,QAAAA,OAAO,EAAEZ,MAAM,CAACY;AAAnC;;AACJ;AACI,aAAOb,KAAP;AApBR;AAsBH,CAxBD;;AA0BA,eAAeD,WAAf","sourcesContent":["import actionTypes from '../actionTypes'\r\nimport store from '../store'\r\nimport {loadState, saveState} from '../store/localStorage'\r\n\r\nconst initialState = {\r\n    employees: [],\r\n    roles: [],\r\n    selectedEmployee: {}\r\n}\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case actionTypes.FEATCH_EMPLOYEES_OK:\r\n            state = { ...state, employees: action.employees.employees, pageInfo: action.employees.pageInfo };\r\n            store.subscribe(() => {\r\n                saveState({\r\n                    state: state\r\n                });\r\n            });\r\n            return state;\r\n        case actionTypes.FEATCH_ROLES_OK:\r\n            return { ...state, roles: action.roles };\r\n        case actionTypes.FEATCH_SELECTED_EMPLOYEE_OK:\r\n            return { ...state, selectedEmployee: action.selectedEmployee };\r\n        case actionTypes.FEATCH_EMPLOYEE_TOBE_CHANGE_OK:\r\n            return { ...state, employeeTobeChange: action.employeeTobeChange };\r\n        case actionTypes.FEATCH_EMPLOYEE_FOR_DISPLAY_OK:\r\n            return { ...state, employeeForDisplay: action.employeeForDisplay };\r\n        case actionTypes.CHANGE_FILTER:\r\n            return { ...state, filters: action.filters };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dataReducer;"]},"metadata":{},"sourceType":"module"}