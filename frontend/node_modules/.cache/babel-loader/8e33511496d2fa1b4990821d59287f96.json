{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n\n    if (serializedState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch {// ignore write errors\n  }\n};\nconst persistedState = loadState();\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, persistedState, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["E:\\Ipedge\\frontend\\src\\store\\index.js"],"names":["createStore","applyMiddleware","createSagaMiddleware","rootReducer","rootSaga","loadState","serializedState","localStorage","getItem","undefined","JSON","parse","err","saveState","state","stringify","setItem","persistedState","sagaMiddleware","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,MAAI;AACA,UAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;;AACA,QAAIF,eAAe,KAAK,IAAxB,EAA8B;AAC1B,aAAOG,SAAP;AACH;;AACD,WAAOC,IAAI,CAACC,KAAL,CAAWL,eAAX,CAAP;AACH,GAND,CAME,OAAOM,GAAP,EAAY;AACV,WAAOH,SAAP;AACH;AACJ,CAVM;AAYP,OAAO,MAAMI,SAAS,GAAIC,KAAD,IAAW;AAChC,MAAI;AACA,UAAMR,eAAe,GAAGI,IAAI,CAACK,SAAL,CAAeD,KAAf,CAAxB;AACAP,IAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BV,eAA9B;AACH,GAHD,CAGE,MAAM,CACJ;AACH;AACJ,CAPM;AASP,MAAMW,cAAc,GAAGZ,SAAS,EAAhC;AAEA,MAAMa,cAAc,GAAGhB,oBAAoB,EAA3C;AACA,MAAMiB,KAAK,GAAGnB,WAAW,CAACG,WAAD,EAAcc,cAAd,EAA8BhB,eAAe,CAACiB,cAAD,CAA7C,CAAzB;AACAA,cAAc,CAACE,GAAf,CAAmBhB,QAAnB;AAEA,eAAee,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from '../reducers'\r\nimport rootSaga from '../sagas'\r\n\r\nexport const loadState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem('state');\r\n        if (serializedState === null) {\r\n            return undefined;\r\n        }\r\n        return JSON.parse(serializedState);\r\n    } catch (err) {\r\n        return undefined;\r\n    }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem('state', serializedState);\r\n    } catch {\r\n        // ignore write errors\r\n    }\r\n};\r\n\r\nconst persistedState = loadState();\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, persistedState, applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}