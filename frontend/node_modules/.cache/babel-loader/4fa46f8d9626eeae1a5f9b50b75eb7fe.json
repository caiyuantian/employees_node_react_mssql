{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\redux_demo2\\\\src\\\\components\\\\left.js\";\nimport React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { CountryFilter, CityFilter } from './leftShow';\nimport { onClickCity, onClickCountry } from '../actions';\n\nclass Left extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.changeStr = () => {\n      return filters = new Date().toLocaleDateString();\n    };\n  }\n\n  render() {\n    let _this$props = this.props,\n        data = _this$props.data,\n        countries = _this$props.countries,\n        cities = _this$props.cities,\n        filters = _this$props.filters,\n        onClickCountry = _this$props.onClickCountry,\n        onClickCity = _this$props.onClickCity;\n    /*\r\n    let showStr = '';\r\n    if (!!data) {\r\n        showStr = data[0].clientName;\r\n    }\r\n    let countryList = ['Australia', 'German']\r\n    */\n\n    return React.createElement(\"div\", {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(CountryFilter, {\n      countryList: countries,\n      onClickCountry: onClickCountry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(CityFilter, {\n      cityList: cities,\n      onClickCity: onClickCity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.changeStr,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"test parent click\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, filters));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  let _state$dataReducer = state.dataReducer,\n      data = _state$dataReducer.data,\n      countries = _state$dataReducer.countries,\n      cities = _state$dataReducer.cities,\n      filters = _state$dataReducer.filters;\n  return {\n    data: data,\n    countries: countries,\n    cities: cities,\n    filters: filters\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClickCountry: bindActionCreators(onClickCountry, dispatch),\n    onClickCity: bindActionCreators(onClickCity, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps)(Left);","map":{"version":3,"sources":["E:\\projects\\redux_demo2\\src\\components\\left.js"],"names":["React","bindActionCreators","connect","CountryFilter","CityFilter","onClickCity","onClickCountry","Left","Component","changeStr","filters","Date","toLocaleDateString","render","props","data","countries","cities","mapStateToProps","state","dataReducer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,YAA1C;AACA,SAAQC,WAAR,EAAqBC,cAArB,QAA0C,YAA1C;;AAEA,MAAMC,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAE/BC,SAF+B,GAEnB,MAAM;AACd,aAAOC,OAAO,GAAI,IAAIC,IAAJ,EAAD,CAAaC,kBAAb,EAAjB;AACH,KAJ8B;AAAA;;AAK/BC,EAAAA,MAAM,GAAG;AAAA,sBACmE,KAAKC,KADxE;AAAA,QACCC,IADD,eACCA,IADD;AAAA,QACOC,SADP,eACOA,SADP;AAAA,QACkBC,MADlB,eACkBA,MADlB;AAAA,QAC0BP,OAD1B,eAC0BA,OAD1B;AAAA,QACmCJ,cADnC,eACmCA,cADnC;AAAA,QACmDD,WADnD,eACmDA,WADnD;AAGL;;;;;;;;AAOA,WACI;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAe,MAAA,WAAW,EAAIW,SAA9B;AAAyC,MAAA,cAAc,EAAIV,cAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAIW,MAAxB;AAAgC,MAAA,WAAW,EAAIZ,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAQ,MAAA,OAAO,EAAI,KAAKI,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIC,OAAJ,CAJJ,CADJ;AAQH;;AAvB8B;;AA2BnC,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AAAA,2BACYA,KAAK,CAACC,WADlB;AAAA,MACzBL,IADyB,sBACzBA,IADyB;AAAA,MACnBC,SADmB,sBACnBA,SADmB;AAAA,MACRC,MADQ,sBACRA,MADQ;AAAA,MACAP,OADA,sBACAA,OADA;AAE/B,SAAO;AAAEK,IAAAA,IAAI,EAAEA,IAAR;AAAcC,IAAAA,SAAS,EAAEA,SAAzB;AACHC,IAAAA,MAAM,EAAEA,MADL;AACaP,IAAAA,OAAO,EAAEA;AADtB,GAAP;AAEH,CAJD;;AAMA,MAAMW,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHhB,IAAAA,cAAc,EAAEL,kBAAkB,CAACK,cAAD,EAAiBgB,QAAjB,CAD/B;AAEHjB,IAAAA,WAAW,EAAEJ,kBAAkB,CAACI,WAAD,EAAciB,QAAd;AAF5B,GAAP;AAIH,CALD;;AAOA,eAAepB,OAAO,CAACgB,eAAD,CAAP,CAAyBX,IAAzB,CAAf","sourcesContent":["import React from 'react'\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux'\r\nimport { CountryFilter, CityFilter } from './leftShow'\r\nimport {onClickCity, onClickCountry} from '../actions'\r\n\r\nclass Left extends React.Component {\r\n\r\n    changeStr = () => {\r\n        return filters = (new Date()).toLocaleDateString() ;\r\n    }\r\n    render() {\r\n        let { data, countries, cities, filters, onClickCountry, onClickCity } = this.props;\r\n        \r\n        /*\r\n        let showStr = '';\r\n        if (!!data) {\r\n            showStr = data[0].clientName;\r\n        }\r\n        let countryList = ['Australia', 'German']\r\n        */\r\n        return (\r\n            <div align=\"left\">\r\n                <CountryFilter countryList = {countries} onClickCountry = {onClickCountry} />\r\n                <CityFilter cityList = {cities} onClickCity = {onClickCity}  />\r\n                <button onClick = {this.changeStr}>test parent click</button>\r\n                <p>{filters}</p>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    let { data, countries, cities, filters } = state.dataReducer\r\n    return { data: data, countries: countries, \r\n        cities: cities, filters: filters };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onClickCountry: bindActionCreators(onClickCountry, dispatch),\r\n        onClickCity: bindActionCreators(onClickCity, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Left)"]},"metadata":{},"sourceType":"module"}