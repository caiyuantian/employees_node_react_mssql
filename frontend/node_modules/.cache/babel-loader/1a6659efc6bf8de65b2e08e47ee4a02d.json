{"ast":null,"code":"import { put, takeEvery, call } from 'redux-saga/effects';\nimport actionTypes from '../actionTypes';\nexport function* fetchEmployeeAsync(action) {\n  try {\n    let queryStr = action.query;\n    let filters = action.filters;\n    let whereStr = JSON.stringify(filters);\n\n    if (whereStr === 'undefined') {\n      whereStr = \"\";\n    } else {\n      console.log(\"whereStr\" + whereStr);\n      whereStr = \"&where=\" + whereStr;\n    } //console.log('http://localhost:5000/api/v1/employees'+queryStr);\n\n\n    const response = yield call(fetch, 'http://localhost:5000/api/v1/employees' + queryStr + whereStr); //const data = response.json();\n\n    const employees = yield call([response, 'json']); //console.log(JSON.stringify(employees));\n\n    if (!!employees) {\n      yield put({\n        type: actionTypes.FEATCH_EMPLOYEES_OK,\n        employees: employees\n      });\n    } //return data[0].usernameName;\n\n  } catch (e) {\n    console.log(e); //return null;\n  }\n}\nexport function* fetchRoleAsync() {\n  try {\n    const response = yield call(fetch, 'http://localhost:5000/api/v1/roles');\n    const roles = yield call([response, 'json']);\n\n    if (!!roles) {\n      yield put({\n        type: actionTypes.FEATCH_ROLES_OK,\n        roles: roles\n      });\n    }\n  } catch (e) {\n    console.log(e);\n  }\n}\nexport function* watchInitLoad() {\n  yield takeEvery('FETCH_EMPLOYEES_ASYNC', fetchEmployeeAsync);\n  yield takeEvery('FETCH_EMPLOYEES_ASYNC', fetchRoleAsync);\n}","map":{"version":3,"sources":["E:\\Ipedge\\frontend\\src\\sagas\\initLoadSaga.js"],"names":["put","takeEvery","call","actionTypes","fetchEmployeeAsync","action","queryStr","query","filters","whereStr","JSON","stringify","console","log","response","fetch","employees","type","FEATCH_EMPLOYEES_OK","e","fetchRoleAsync","roles","FEATCH_ROLES_OK","watchInitLoad"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,OAAO,UAAUC,kBAAV,CAA6BC,MAA7B,EAAqC;AACxC,MAAI;AACA,QAAIC,QAAQ,GAACD,MAAM,CAACE,KAApB;AACA,QAAIC,OAAO,GAAGH,MAAM,CAACG,OAArB;AACA,QAAIC,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAeH,OAAf,CAAf;;AAEA,QAAIC,QAAQ,KAAG,WAAf,EAA2B;AACvBA,MAAAA,QAAQ,GAAG,EAAX;AACH,KAFD,MAEO;AACHG,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAWJ,QAAvB;AACAA,MAAAA,QAAQ,GAAG,YAAUA,QAArB;AACH,KAVD,CAWA;;;AACA,UAAMK,QAAQ,GAAG,MAAMZ,IAAI,CAACa,KAAD,EAAQ,2CAAyCT,QAAzC,GAAkDG,QAA1D,CAA3B,CAZA,CAaA;;AACA,UAAMO,SAAS,GAAG,MAAMd,IAAI,CAAC,CAACY,QAAD,EAAW,MAAX,CAAD,CAA5B,CAdA,CAeA;;AACA,QAAI,CAAC,CAACE,SAAN,EAAiB;AACb,YAAMhB,GAAG,CAAC;AAAEiB,QAAAA,IAAI,EAAEd,WAAW,CAACe,mBAApB;AAAyCF,QAAAA,SAAS,EAAEA;AAApD,OAAD,CAAT;AACH,KAlBD,CAmBA;;AACH,GApBD,CAoBE,OAAOG,CAAP,EAAU;AACRP,IAAAA,OAAO,CAACC,GAAR,CAAYM,CAAZ,EADQ,CAER;AACH;AACJ;AAED,OAAO,UAAUC,cAAV,GAA2B;AAC9B,MAAI;AACA,UAAMN,QAAQ,GAAG,MAAMZ,IAAI,CAACa,KAAD,EAAQ,oCAAR,CAA3B;AACA,UAAMM,KAAK,GAAG,MAAMnB,IAAI,CAAC,CAACY,QAAD,EAAW,MAAX,CAAD,CAAxB;;AACA,QAAI,CAAC,CAACO,KAAN,EAAa;AACT,YAAMrB,GAAG,CAAC;AAAEiB,QAAAA,IAAI,EAAEd,WAAW,CAACmB,eAApB;AAAqCD,QAAAA,KAAK,EAAEA;AAA5C,OAAD,CAAT;AACH;AACJ,GAND,CAME,OAAOF,CAAP,EAAU;AACRP,IAAAA,OAAO,CAACC,GAAR,CAAYM,CAAZ;AACH;AACJ;AAED,OAAO,UAAUI,aAAV,GAA0B;AAC7B,QAAMtB,SAAS,CAAC,uBAAD,EAA0BG,kBAA1B,CAAf;AACA,QAAMH,SAAS,CAAC,uBAAD,EAA0BmB,cAA1B,CAAf;AACH","sourcesContent":["import { put, takeEvery, call } from 'redux-saga/effects'\r\nimport actionTypes from '../actionTypes'\r\n\r\nexport function* fetchEmployeeAsync(action) {\r\n    try {\r\n        let queryStr=action.query;\r\n        let filters = action.filters;\r\n        let whereStr = JSON.stringify(filters);\r\n        \r\n        if (whereStr==='undefined'){\r\n            whereStr = \"\";\r\n        } else {\r\n            console.log(\"whereStr\"+whereStr);\r\n            whereStr = \"&where=\"+whereStr;\r\n        }\r\n        //console.log('http://localhost:5000/api/v1/employees'+queryStr);\r\n        const response = yield call(fetch, 'http://localhost:5000/api/v1/employees'+queryStr+whereStr);\r\n        //const data = response.json();\r\n        const employees = yield call([response, 'json']);\r\n        //console.log(JSON.stringify(employees));\r\n        if (!!employees) {\r\n            yield put({ type: actionTypes.FEATCH_EMPLOYEES_OK, employees: employees});\r\n        }\r\n        //return data[0].usernameName;\r\n    } catch (e) {\r\n        console.log(e);\r\n        //return null;\r\n    }\r\n}\r\n\r\nexport function* fetchRoleAsync() {\r\n    try {\r\n        const response = yield call(fetch, 'http://localhost:5000/api/v1/roles');\r\n        const roles = yield call([response, 'json']);\r\n        if (!!roles) {\r\n            yield put({ type: actionTypes.FEATCH_ROLES_OK, roles: roles});\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport function* watchInitLoad() {\r\n    yield takeEvery('FETCH_EMPLOYEES_ASYNC', fetchEmployeeAsync);\r\n    yield takeEvery('FETCH_EMPLOYEES_ASYNC', fetchRoleAsync);\r\n}"]},"metadata":{},"sourceType":"module"}