{"ast":null,"code":"import _objectSpread from \"E:\\\\Ipedge\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { put, takeEvery, call } from 'redux-saga/effects';\nimport actionTypes from '../actionTypes';\nimport config from '../config';\nexport function* clickPageNoAsync(action) {\n  console.log(\"action=\" + JSON.stringify(action));\n  let pageSize = action.pageSize;\n  let pageNo = action.pageNo;\n  let queryString = '?pageSize=' + pageSize + '&PageNo=' + pageNo;\n\n  try {\n    //console.log('http://localhost:5000/api/v1/employees' + queryString);\n    const response = yield call(fetch, config.backendAddress + '/api/v1/employees' + queryString);\n    const employees = yield call([response, 'json']);\n\n    if (!!employees) {\n      yield put({\n        type: actionTypes.FEATCH_EMPLOYEES_OK,\n        employees: employees\n      });\n    } //return data[0].usernameName;\n\n  } catch (e) {\n    console.log(e); //return null;\n  }\n}\nexport function* changePageSizeAsync(action) {\n  try {\n    if (action.pageSize > 0) {\n      let queryStr = '?pageSize=' + action.pageSize + '&pageNo=' + action.pageNo;\n      console.log(config.backendAddress + '/api/v1/employees' + queryStr);\n      const response = yield call(fetch, config.backendAddress + '/api/v1/employees' + queryStr); //const data = response.json();\n\n      const employees = yield call([response, 'json']); //console.log(JSON.stringify(employees));\n\n      if (!!employees) {\n        yield put({\n          type: actionTypes.FEATCH_EMPLOYEES_OK,\n          employees: employees\n        });\n      }\n    } else {\n      return;\n    } //return data[0].usernameName;\n\n  } catch (e) {\n    console.log(e); //return null;\n  }\n}\nexport function* changeFilterAsync(action) {\n  let filters = action.filters;\n\n  if (action.value === '') {\n    try {\n      delete filters[action.field];\n    } catch (error) {}\n  } else {\n    switch (action.field) {\n      case 'employeeName':\n        filters = _objectSpread({}, filters, {\n          employeeName: action.value\n        });\n        break;\n\n      case 'EmployeeNumber':\n        filters = _objectSpread({}, filters, {\n          EmployeeNumber: action.value\n        });\n        break;\n\n      case 'DateJoined':\n        filters = _objectSpread({}, filters, {\n          DateJoined: action.value\n        });\n        break;\n\n      case 'Extension':\n        filters = _objectSpread({}, filters, {\n          Extension: action.value\n        });\n        break;\n\n      case 'RoleName':\n        filters = _objectSpread({}, filters, {\n          RoleName: action.value\n        });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  yield put({\n    type: actionTypes.CHANGE_FILTER,\n    filters: filters\n  });\n  yield put({\n    type: actionTypes.FETCH_EMPLOYEES_ASYNC,\n    query: action.query,\n    filters: filters\n  });\n}\nexport function* watchEmployeePage() {\n  yield takeEvery(actionTypes.CLICK_PAGENO_ASYNC, clickPageNoAsync);\n  yield takeEvery(actionTypes.CHANGE_PAGE_SIZE_ASYNC, changePageSizeAsync);\n  yield takeEvery(actionTypes.CHANGE_FILTER_ASYNC, changeFilterAsync);\n}","map":{"version":3,"sources":["E:\\Ipedge\\frontend\\src\\sagas\\employees.js"],"names":["put","takeEvery","call","actionTypes","config","clickPageNoAsync","action","console","log","JSON","stringify","pageSize","pageNo","queryString","response","fetch","backendAddress","employees","type","FEATCH_EMPLOYEES_OK","e","changePageSizeAsync","queryStr","changeFilterAsync","filters","value","field","error","employeeName","EmployeeNumber","DateJoined","Extension","RoleName","CHANGE_FILTER","FETCH_EMPLOYEES_ASYNC","query","watchEmployeePage","CLICK_PAGENO_ASYNC","CHANGE_PAGE_SIZE_ASYNC","CHANGE_FILTER_ASYNC"],"mappings":";AAAA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAGA,OAAO,UAAUC,gBAAV,CAA2BC,MAA3B,EAAmC;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAYC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAxB;AACA,MAAIK,QAAQ,GAAGL,MAAM,CAACK,QAAtB;AACA,MAAIC,MAAM,GAAGN,MAAM,CAACM,MAApB;AACA,MAAIC,WAAW,GAAG,eAAeF,QAAf,GAA0B,UAA1B,GAAuCC,MAAzD;;AACA,MAAI;AACA;AACA,UAAME,QAAQ,GAAG,MAAMZ,IAAI,CAACa,KAAD,EAAQX,MAAM,CAACY,cAAP,GAAsB,mBAAtB,GAA4CH,WAApD,CAA3B;AACA,UAAMI,SAAS,GAAG,MAAMf,IAAI,CAAC,CAACY,QAAD,EAAW,MAAX,CAAD,CAA5B;;AACA,QAAI,CAAC,CAACG,SAAN,EAAiB;AACb,YAAMjB,GAAG,CAAC;AAAEkB,QAAAA,IAAI,EAAEf,WAAW,CAACgB,mBAApB;AAAyCF,QAAAA,SAAS,EAAEA;AAApD,OAAD,CAAT;AACH,KAND,CAOA;;AACH,GARD,CAQE,OAAOG,CAAP,EAAU;AACRb,IAAAA,OAAO,CAACC,GAAR,CAAYY,CAAZ,EADQ,CAER;AACH;AACJ;AAED,OAAO,UAAUC,mBAAV,CAA8Bf,MAA9B,EAAsC;AACzC,MAAI;AACA,QAAIA,MAAM,CAACK,QAAP,GAAkB,CAAtB,EAAyB;AACrB,UAAIW,QAAQ,GAAG,eAAehB,MAAM,CAACK,QAAtB,GAAiC,UAAjC,GAA8CL,MAAM,CAACM,MAApE;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACY,cAAP,GAAsB,mBAAtB,GAA4CM,QAAxD;AACA,YAAMR,QAAQ,GAAG,MAAMZ,IAAI,CAACa,KAAD,EAAQX,MAAM,CAACY,cAAP,GAAsB,mBAAtB,GAA4CM,QAApD,CAA3B,CAHqB,CAIrB;;AACA,YAAML,SAAS,GAAG,MAAMf,IAAI,CAAC,CAACY,QAAD,EAAW,MAAX,CAAD,CAA5B,CALqB,CAMrB;;AACA,UAAI,CAAC,CAACG,SAAN,EAAiB;AACb,cAAMjB,GAAG,CAAC;AAAEkB,UAAAA,IAAI,EAAEf,WAAW,CAACgB,mBAApB;AAAyCF,UAAAA,SAAS,EAAEA;AAApD,SAAD,CAAT;AACH;AACJ,KAVD,MAUO;AACH;AACH,KAbD,CAeA;;AACH,GAhBD,CAgBE,OAAOG,CAAP,EAAU;AACRb,IAAAA,OAAO,CAACC,GAAR,CAAYY,CAAZ,EADQ,CAER;AACH;AACJ;AAID,OAAO,UAAUG,iBAAV,CAA4BjB,MAA5B,EAAoC;AAAA,MACjCkB,OADiC,GACrBlB,MADqB,CACjCkB,OADiC;;AAEvC,MAAIlB,MAAM,CAACmB,KAAP,KAAiB,EAArB,EAAyB;AACrB,QAAI;AACA,aAAOD,OAAO,CAAClB,MAAM,CAACoB,KAAR,CAAd;AACH,KAFD,CAEE,OAAOC,KAAP,EAAc,CACf;AACJ,GALD,MAKO;AACH,YAAQrB,MAAM,CAACoB,KAAf;AACI,WAAK,cAAL;AACIF,QAAAA,OAAO,qBAAQA,OAAR;AAAiBI,UAAAA,YAAY,EAAEtB,MAAM,CAACmB;AAAtC,UAAP;AACA;;AACJ,WAAK,gBAAL;AACID,QAAAA,OAAO,qBAAQA,OAAR;AAAiBK,UAAAA,cAAc,EAAEvB,MAAM,CAACmB;AAAxC,UAAP;AACA;;AACJ,WAAK,YAAL;AACID,QAAAA,OAAO,qBAAQA,OAAR;AAAiBM,UAAAA,UAAU,EAAExB,MAAM,CAACmB;AAApC,UAAP;AACA;;AACJ,WAAK,WAAL;AACID,QAAAA,OAAO,qBAAQA,OAAR;AAAiBO,UAAAA,SAAS,EAAEzB,MAAM,CAACmB;AAAnC,UAAP;AACA;;AACJ,WAAK,UAAL;AACID,QAAAA,OAAO,qBAAQA,OAAR;AAAiBQ,UAAAA,QAAQ,EAAE1B,MAAM,CAACmB;AAAlC,UAAP;AACA;;AACJ;AACI;AAjBR;AAmBH;;AAED,QAAMzB,GAAG,CAAC;AAAEkB,IAAAA,IAAI,EAAEf,WAAW,CAAC8B,aAApB;AAAmCT,IAAAA,OAAO,EAAEA;AAA5C,GAAD,CAAT;AACA,QAAMxB,GAAG,CAAC;AAAEkB,IAAAA,IAAI,EAAEf,WAAW,CAAC+B,qBAApB;AAA2CC,IAAAA,KAAK,EAAE7B,MAAM,CAAC6B,KAAzD;AAAgEX,IAAAA,OAAO,EAAEA;AAAzE,GAAD,CAAT;AACH;AAGD,OAAO,UAAUY,iBAAV,GAA8B;AACjC,QAAMnC,SAAS,CAACE,WAAW,CAACkC,kBAAb,EAAiChC,gBAAjC,CAAf;AACA,QAAMJ,SAAS,CAACE,WAAW,CAACmC,sBAAb,EAAqCjB,mBAArC,CAAf;AACA,QAAMpB,SAAS,CAACE,WAAW,CAACoC,mBAAb,EAAkChB,iBAAlC,CAAf;AACH","sourcesContent":["import { put, takeEvery, call } from 'redux-saga/effects'\r\nimport actionTypes from '../actionTypes'\r\nimport config from '../config'\r\n\r\n\r\nexport function* clickPageNoAsync(action) {\r\n    console.log(\"action=\" + JSON.stringify(action))\r\n    let pageSize = action.pageSize;\r\n    let pageNo = action.pageNo;\r\n    let queryString = '?pageSize=' + pageSize + '&PageNo=' + pageNo\r\n    try {\r\n        //console.log('http://localhost:5000/api/v1/employees' + queryString);\r\n        const response = yield call(fetch, config.backendAddress+'/api/v1/employees' + queryString);\r\n        const employees = yield call([response, 'json']);\r\n        if (!!employees) {\r\n            yield put({ type: actionTypes.FEATCH_EMPLOYEES_OK, employees: employees });\r\n        }\r\n        //return data[0].usernameName;\r\n    } catch (e) {\r\n        console.log(e);\r\n        //return null;\r\n    }\r\n}\r\n\r\nexport function* changePageSizeAsync(action) {\r\n    try {\r\n        if (action.pageSize > 0) {\r\n            let queryStr = '?pageSize=' + action.pageSize + '&pageNo=' + action.pageNo;\r\n            console.log(config.backendAddress+'/api/v1/employees' + queryStr);\r\n            const response = yield call(fetch, config.backendAddress+'/api/v1/employees' + queryStr);\r\n            //const data = response.json();\r\n            const employees = yield call([response, 'json']);\r\n            //console.log(JSON.stringify(employees));\r\n            if (!!employees) {\r\n                yield put({ type: actionTypes.FEATCH_EMPLOYEES_OK, employees: employees });\r\n            }\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        //return data[0].usernameName;\r\n    } catch (e) {\r\n        console.log(e);\r\n        //return null;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function* changeFilterAsync(action) {\r\n    let { filters } = action;\r\n    if (action.value === '') {\r\n        try {\r\n            delete filters[action.field]\r\n        } catch (error) {\r\n        }\r\n    } else {\r\n        switch (action.field) {\r\n            case 'employeeName':\r\n                filters = { ...filters, employeeName: action.value };\r\n                break;\r\n            case 'EmployeeNumber':\r\n                filters = { ...filters, EmployeeNumber: action.value };\r\n                break;\r\n            case 'DateJoined':\r\n                filters = { ...filters, DateJoined: action.value };\r\n                break;\r\n            case 'Extension':\r\n                filters = { ...filters, Extension: action.value };\r\n                break;\r\n            case 'RoleName':\r\n                filters = { ...filters, RoleName: action.value };\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    yield put({ type: actionTypes.CHANGE_FILTER, filters: filters })\r\n    yield put({ type: actionTypes.FETCH_EMPLOYEES_ASYNC, query: action.query, filters: filters })\r\n}\r\n\r\n\r\nexport function* watchEmployeePage() {\r\n    yield takeEvery(actionTypes.CLICK_PAGENO_ASYNC, clickPageNoAsync);\r\n    yield takeEvery(actionTypes.CHANGE_PAGE_SIZE_ASYNC, changePageSizeAsync);\r\n    yield takeEvery(actionTypes.CHANGE_FILTER_ASYNC, changeFilterAsync);\r\n}"]},"metadata":{},"sourceType":"module"}