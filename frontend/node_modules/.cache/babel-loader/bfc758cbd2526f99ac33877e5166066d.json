{"ast":null,"code":"var _jsxFileName = \"E:\\\\Ipedge\\\\frontend\\\\src\\\\components\\\\employeeLeft.js\";\nimport React from 'react';\n\nclass EmployeeLeft extends React.Component {\n  render() {\n    let _this$props = this.props,\n        employees = _this$props.employees,\n        count = _this$props.count,\n        onClickEmployee = _this$props.onClickEmployee,\n        queryParams = _this$props.queryParams;\n    let employeeList = null;\n    let pageLink = [];\n    let pageSize = 5;\n    let pageNo = 1;\n\n    if (!!queryParams) {\n      pageNo = queryParams[\"pageNo\"];\n      pageSize = queryParams[\"pageSize\"];\n    }\n\n    console.log(queryParams);\n    let totalPageNo = Math.ceil(count / pageSize);\n\n    if (!!employees) {\n      console.log(\"count:\" + count);\n      employeeList = employees.map(employee => React.createElement(\"p\", {\n        key: employee.EmployeeID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"\",\n        onClick: () => onClickEmployee(employee.EmployeeID),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, employee.EmployeeNumber, \" \", employee.FirstName, \" \", employee.LastName)));\n\n      for (let i = 0; i < totalPageNo; i++) {\n        pageLink.push(React.createElement(\"a\", {\n          href: './employees?pageSize=' + pageSize + '&pageNo=' + (i + 1),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \" \", i + 1, \" \"));\n      }\n\n      console.log(\"totalPageNo:\" + totalPageNo);\n      console.log(\"pageLink:\" + pageLink);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, employeeList, React.createElement(\"div\", {\n      id: \"pg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, pageLink));\n  }\n\n}\n\nexport { EmployeeLeft };","map":{"version":3,"sources":["E:\\Ipedge\\frontend\\src\\components\\employeeLeft.js"],"names":["React","EmployeeLeft","Component","render","props","employees","count","onClickEmployee","queryParams","employeeList","pageLink","pageSize","pageNo","console","log","totalPageNo","Math","ceil","map","employee","EmployeeID","EmployeeNumber","FirstName","LastName","i","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA2C;AACvCC,EAAAA,MAAM,GAAG;AAAA,sBACoD,KAAKC,KADzD;AAAA,QACCC,SADD,eACCA,SADD;AAAA,QACYC,KADZ,eACYA,KADZ;AAAA,QACmBC,eADnB,eACmBA,eADnB;AAAA,QACoCC,WADpC,eACoCA,WADpC;AAEL,QAAIC,YAAY,GAAG,IAAnB;AAGA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,QAAQ,GAAG,CAAf;AACA,QAAIC,MAAM,GAAG,CAAb;;AACA,QAAG,CAAC,CAACJ,WAAL,EAAkB;AACdI,MAAAA,MAAM,GAAGJ,WAAW,CAAC,QAAD,CAApB;AACAG,MAAAA,QAAQ,GAAGH,WAAW,CAAC,UAAD,CAAtB;AACH;;AACDK,IAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACA,QAAIO,WAAW,GAAGC,IAAI,CAACC,IAAL,CAAUX,KAAK,GAAGK,QAAlB,CAAlB;;AAEA,QAAI,CAAC,CAACN,SAAN,EAAiB;AACbQ,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWR,KAAvB;AACAG,MAAAA,YAAY,GAAGJ,SAAS,CAACa,GAAV,CAAeC,QAAD,IACzB;AAAG,QAAA,GAAG,EAAEA,QAAQ,CAACC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,IAAI,EAAC,EAAR;AAAW,QAAA,OAAO,EAAE,MAAMb,eAAe,CAACY,QAAQ,CAACC,UAAV,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,QAAQ,CAACE,cADd,OAC+BF,QAAQ,CAACG,SADxC,OACoDH,QAAQ,CAACI,QAD7D,CADJ,CADW,CAAf;;AAMA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,WAApB,EAAiCS,CAAC,EAAlC,EAAsC;AAClCd,QAAAA,QAAQ,CAACe,IAAT,CACI;AAAG,UAAA,IAAI,EAAE,0BAAwBd,QAAxB,GAAiC,UAAjC,IAA6Ca,CAAC,GAAC,CAA/C,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA8DA,CAAC,GAAG,CAAlE,MADJ;AAGH;;AACDX,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBC,WAA7B;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAcJ,QAA1B;AACH;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,YADL,EAEI;AAAK,MAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcC,QAAd,CAFJ,CADJ;AAOH;;AAvCsC;;AA0C3C,SAAST,YAAT","sourcesContent":["import React from 'react';\r\n\r\nclass EmployeeLeft extends React.Component {\r\n    render() {\r\n        let { employees, count, onClickEmployee, queryParams } = this.props;\r\n        let employeeList = null;\r\n\r\n\r\n        let pageLink = [];\r\n        let pageSize = 5;\r\n        let pageNo = 1;\r\n        if(!!queryParams) {\r\n            pageNo = queryParams[\"pageNo\"]\r\n            pageSize = queryParams[\"pageSize\"]\r\n        }\r\n        console.log(queryParams);\r\n        let totalPageNo = Math.ceil(count / pageSize);\r\n\r\n        if (!!employees) {\r\n            console.log(\"count:\" + count);\r\n            employeeList = employees.map((employee) => (\r\n                <p key={employee.EmployeeID}>\r\n                    <a href='' onClick={() => onClickEmployee(employee.EmployeeID)}>\r\n                        {employee.EmployeeNumber} {employee.FirstName} {employee.LastName}</a>\r\n                </p>\r\n            ));\r\n            for (let i = 0; i < totalPageNo; i++) {\r\n                pageLink.push(\r\n                    <a href={'./employees?pageSize='+pageSize+'&pageNo='+(i+1)}> {i + 1} </a>\r\n                );\r\n            }\r\n            console.log(\"totalPageNo:\" + totalPageNo);\r\n            console.log(\"pageLink:\" + pageLink);\r\n        }\r\n        return (\r\n            <div>\r\n                {employeeList}\r\n                <div id='pg'>{pageLink}</div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { EmployeeLeft }"]},"metadata":{},"sourceType":"module"}