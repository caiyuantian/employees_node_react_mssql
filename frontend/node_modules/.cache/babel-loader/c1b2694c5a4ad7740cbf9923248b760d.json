{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\nimport { loadState, saveState } from './localStorage';\nconst persistedState = loadState();\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, persistedState, applyMiddleware(sagaMiddleware));\nconsole.log(\"first persistedState=\" + persistedState);\nconsole.log(\"first store.getState()=\" + JSON.stringify(store.getState()));\nstore.subscribe(() => {\n  const state = store.getState();\n  saveState(state);\n});\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["E:\\Ipedge\\frontend\\src\\store\\index.js"],"names":["createStore","applyMiddleware","createSagaMiddleware","rootReducer","rootSaga","loadState","saveState","persistedState","sagaMiddleware","store","console","log","JSON","stringify","getState","subscribe","state","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAAQC,SAAR,EAAmBC,SAAnB,QAAmC,gBAAnC;AAGA,MAAMC,cAAc,GAAGF,SAAS,EAAhC;AAEA,MAAMG,cAAc,GAAGN,oBAAoB,EAA3C;AACA,MAAMO,KAAK,GAAGT,WAAW,CAACG,WAAD,EAAcI,cAAd,EAA8BN,eAAe,CAACO,cAAD,CAA7C,CAAzB;AACAE,OAAO,CAACC,GAAR,CAAY,0BAAwBJ,cAApC;AACAG,OAAO,CAACC,GAAR,CAAY,4BAA0BC,IAAI,CAACC,SAAL,CAAeJ,KAAK,CAACK,QAAN,EAAf,CAAtC;AACAL,KAAK,CAACM,SAAN,CAAgB,MAAM;AAClB,QAAMC,KAAK,GAAGP,KAAK,CAACK,QAAN,EAAd;AACAR,EAAAA,SAAS,CAACU,KAAD,CAAT;AACD,CAHH;AAIAR,cAAc,CAACS,GAAf,CAAmBb,QAAnB;AAEA,eAAeK,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from '../reducers'\r\nimport rootSaga from '../sagas'\r\nimport {loadState, saveState} from './localStorage'\r\n\r\n\r\nconst persistedState = loadState();\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, persistedState, applyMiddleware(sagaMiddleware));\r\nconsole.log(\"first persistedState=\"+persistedState)\r\nconsole.log(\"first store.getState()=\"+JSON.stringify(store.getState()))\r\nstore.subscribe(() => {\r\n    const state = store.getState();\r\n    saveState(state);\r\n  })\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}