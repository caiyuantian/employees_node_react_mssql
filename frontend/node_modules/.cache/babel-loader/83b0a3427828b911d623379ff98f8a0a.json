{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\redux_demo2\\\\src\\\\components\\\\left.js\";\nimport React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { onClickCountry, onClickCity } from '../actions';\nimport { CountryFilter, CityFilter } from './leftShow';\n\nclass Left extends React.Component {\n  render() {\n    let _this$props = this.props,\n        data = _this$props.data,\n        countries = _this$props.countries,\n        cities = _this$props.cities;\n    /*\r\n    let showStr = '';\r\n    if (!!data) {\r\n        showStr = data[0].clientName;\r\n    }\r\n    let countryList = ['Australia', 'German']\r\n    */\n\n    return React.createElement(\"div\", {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(CountryFilter, {\n      countryList: countries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(CityFilter, {\n      cityList: cities,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  let _state$dataReducer = state.dataReducer,\n      data = _state$dataReducer.data,\n      countries = _state$dataReducer.countries,\n      cities = _state$dataReducer.cities,\n      filters = _state$dataReducer.filters;\n  return {\n    data: data,\n    countries: countries,\n    cities: cities,\n    filters: filters\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClickCountry: bindActionCreators(onClickCountry, dispatch),\n    onClickCity: bindActionCreators(onClickCity, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps)(Left);","map":{"version":3,"sources":["E:\\projects\\redux_demo2\\src\\components\\left.js"],"names":["React","bindActionCreators","connect","onClickCountry","onClickCity","CountryFilter","CityFilter","Left","Component","render","props","data","countries","cities","mapStateToProps","state","dataReducer","filters","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,YAA5C;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,YAA1C;;AAEA,MAAMC,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AAC/BC,EAAAA,MAAM,GAAG;AAAA,sBAC6B,KAAKC,KADlC;AAAA,QACCC,IADD,eACCA,IADD;AAAA,QACOC,SADP,eACOA,SADP;AAAA,QACkBC,MADlB,eACkBA,MADlB;AAGL;;;;;;;;AAOA,WACI;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAe,MAAA,WAAW,EAAID,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAIC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAjB8B;;AAqBnC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA,2BACYA,KAAK,CAACC,WADlB;AAAA,MACzBL,IADyB,sBACzBA,IADyB;AAAA,MACnBC,SADmB,sBACnBA,SADmB;AAAA,MACRC,MADQ,sBACRA,MADQ;AAAA,MACAI,OADA,sBACAA,OADA;AAE/B,SAAO;AAAEN,IAAAA,IAAI,EAAEA,IAAR;AAAcC,IAAAA,SAAS,EAAEA,SAAzB;AACHC,IAAAA,MAAM,EAAEA,MADL;AACaI,IAAAA,OAAO,EAAEA;AADtB,GAAP;AAEH,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHhB,IAAAA,cAAc,EAAEF,kBAAkB,CAACE,cAAD,EAAiBgB,QAAjB,CAD/B;AAEHf,IAAAA,WAAW,EAAEH,kBAAkB,CAACG,WAAD,EAAce,QAAd;AAF5B,GAAP;AAIH,CALD;;AAOA,eAAejB,OAAO,CAACY,eAAD,CAAP,CAAyBP,IAAzB,CAAf","sourcesContent":["import React from 'react'\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux'\r\nimport { onClickCountry, onClickCity } from '../actions'\r\nimport { CountryFilter, CityFilter } from './leftShow'\r\n\r\nclass Left extends React.Component {\r\n    render() {\r\n        let { data, countries, cities } = this.props;\r\n        \r\n        /*\r\n        let showStr = '';\r\n        if (!!data) {\r\n            showStr = data[0].clientName;\r\n        }\r\n        let countryList = ['Australia', 'German']\r\n        */\r\n        return (\r\n            <div align=\"left\">\r\n                <CountryFilter countryList = {countries} />\r\n                <CityFilter cityList = {cities} />\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    let { data, countries, cities, filters } = state.dataReducer\r\n    return { data: data, countries: countries, \r\n        cities: cities, filters: filters };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onClickCountry: bindActionCreators(onClickCountry, dispatch),\r\n        onClickCity: bindActionCreators(onClickCity, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Left)"]},"metadata":{},"sourceType":"module"}