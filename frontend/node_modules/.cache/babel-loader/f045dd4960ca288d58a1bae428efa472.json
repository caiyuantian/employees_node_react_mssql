{"ast":null,"code":"import _objectSpread from \"E:\\\\Ipedge\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport actionTypes from '../actionTypes';\nconst initialState = {\n  employees: [],\n  roles: [],\n  selectedEmployee: {}\n};\n\nconst dataReducer = (state = initialState, action) => {\n  let filters = state.filters,\n      prefilters = state.prefilters;\n\n  switch (action.type) {\n    case actionTypes.FEATCH_EMPLOYEES_OK:\n      return _objectSpread({}, state, {\n        employees: action.employees.employees,\n        pageInfo: action.employees.pageInfo,\n        prefilters: filters\n      });\n\n    case actionTypes.FEATCH_ROLES_OK:\n      return _objectSpread({}, state, {\n        roles: action.roles\n      });\n\n    case actionTypes.FEATCH_SELECTED_EMPLOYEE_OK:\n      return _objectSpread({}, state, {\n        selectedEmployee: action.selectedEmployee\n      });\n\n    case actionTypes.FEATCH_EMPLOYEE_TOBE_CHANGE_OK:\n      return _objectSpread({}, state, {\n        employeeTobeChange: action.employeeTobeChange\n      });\n\n    case actionTypes.FEATCH_EMPLOYEE_FOR_DISPLAY_OK:\n      return _objectSpread({}, state, {\n        employeeForDisplay: action.employeeForDisplay\n      });\n\n    case actionTypes.CHANGE_FILTER:\n      let prefilters = filters;\n\n      if (action.value === '') {\n        try {\n          delete filters[action.field];\n          return _objectSpread({}, state, {\n            filters: filters\n          });\n        } catch (error) {\n          return _objectSpread({}, state, {\n            filters: filters\n          });\n        }\n      }\n\n      switch (action.field) {\n        case 'employeeName':\n          filters = _objectSpread({}, filters, {\n            employeeName: action.value\n          });\n          break;\n\n        case 'EmployeeNumber':\n          filters = _objectSpread({}, filters, {\n            EmployeeNumber: action.value\n          });\n          break;\n\n        case 'DateJoined':\n          filters = _objectSpread({}, filters, {\n            DateJoined: action.value\n          });\n          break;\n\n        case 'Extension':\n          filters = _objectSpread({}, filters, {\n            Extension: action.value\n          });\n          break;\n\n        case 'RoleName':\n          filters = _objectSpread({}, filters, {\n            RoleName: action.value\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      return _objectSpread({}, state, {\n        filters: filters,\n        prefilters: prefilters\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;","map":{"version":3,"sources":["E:\\Ipedge\\frontend\\src\\reducers\\dataReducer.js"],"names":["actionTypes","initialState","employees","roles","selectedEmployee","dataReducer","state","action","filters","prefilters","type","FEATCH_EMPLOYEES_OK","pageInfo","FEATCH_ROLES_OK","FEATCH_SELECTED_EMPLOYEE_OK","FEATCH_EMPLOYEE_TOBE_CHANGE_OK","employeeTobeChange","FEATCH_EMPLOYEE_FOR_DISPLAY_OK","employeeForDisplay","CHANGE_FILTER","value","field","error","employeeName","EmployeeNumber","DateJoined","Extension","RoleName"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,gBAAgB,EAAE;AAHD,CAArB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAAA,MAC5CC,OAD4C,GACpBF,KADoB,CAC5CE,OAD4C;AAAA,MACnCC,UADmC,GACpBH,KADoB,CACnCG,UADmC;;AAElD,UAAQF,MAAM,CAACG,IAAf;AACI,SAAKV,WAAW,CAACW,mBAAjB;AACI,+BAAYL,KAAZ;AAAmBJ,QAAAA,SAAS,EAAEK,MAAM,CAACL,SAAP,CAAiBA,SAA/C;AAA0DU,QAAAA,QAAQ,EAAEL,MAAM,CAACL,SAAP,CAAiBU,QAArF;AAA+FH,QAAAA,UAAU,EAAED;AAA3G;;AACJ,SAAKR,WAAW,CAACa,eAAjB;AACI,+BAAYP,KAAZ;AAAmBH,QAAAA,KAAK,EAAEI,MAAM,CAACJ;AAAjC;;AACJ,SAAKH,WAAW,CAACc,2BAAjB;AACI,+BAAYR,KAAZ;AAAmBF,QAAAA,gBAAgB,EAAEG,MAAM,CAACH;AAA5C;;AACJ,SAAKJ,WAAW,CAACe,8BAAjB;AACI,+BAAYT,KAAZ;AAAmBU,QAAAA,kBAAkB,EAAET,MAAM,CAACS;AAA9C;;AACJ,SAAKhB,WAAW,CAACiB,8BAAjB;AACI,+BAAYX,KAAZ;AAAmBY,QAAAA,kBAAkB,EAAEX,MAAM,CAACW;AAA9C;;AACJ,SAAKlB,WAAW,CAACmB,aAAjB;AAEI,UAAIV,UAAU,GAAGD,OAAjB;;AACA,UAAID,MAAM,CAACa,KAAP,KAAiB,EAArB,EAAyB;AACrB,YAAI;AACA,iBAAOZ,OAAO,CAACD,MAAM,CAACc,KAAR,CAAd;AACA,mCAAYf,KAAZ;AAAmBE,YAAAA,OAAO,EAAEA;AAA5B;AACH,SAHD,CAGE,OAAOc,KAAP,EAAa;AACX,mCAAYhB,KAAZ;AAAmBE,YAAAA,OAAO,EAAEA;AAA5B;AACH;AACJ;;AACD,cAAQD,MAAM,CAACc,KAAf;AACI,aAAK,cAAL;AACIb,UAAAA,OAAO,qBAAQA,OAAR;AAAiBe,YAAAA,YAAY,EAAEhB,MAAM,CAACa;AAAtC,YAAP;AACA;;AACJ,aAAK,gBAAL;AACIZ,UAAAA,OAAO,qBAAQA,OAAR;AAAiBgB,YAAAA,cAAc,EAAEjB,MAAM,CAACa;AAAxC,YAAP;AACA;;AACJ,aAAK,YAAL;AACIZ,UAAAA,OAAO,qBAAQA,OAAR;AAAiBiB,YAAAA,UAAU,EAAElB,MAAM,CAACa;AAApC,YAAP;AACA;;AACJ,aAAK,WAAL;AACIZ,UAAAA,OAAO,qBAAQA,OAAR;AAAiBkB,YAAAA,SAAS,EAAEnB,MAAM,CAACa;AAAnC,YAAP;AACA;;AACJ,aAAK,UAAL;AACIZ,UAAAA,OAAO,qBAAQA,OAAR;AAAiBmB,YAAAA,QAAQ,EAAEpB,MAAM,CAACa;AAAlC,YAAP;AACA;;AACJ;AACI;AAjBR;;AAmBA,+BAAYd,KAAZ;AAAmBE,QAAAA,OAAO,EAAEA,OAA5B;AAAqCC,QAAAA,UAAU,EAAEA;AAAjD;;AACJ;AACI,aAAOH,KAAP;AA3CR;AA6CH,CA/CD;;AAiDA,eAAeD,WAAf","sourcesContent":["import actionTypes from '../actionTypes'\r\n\r\nconst initialState = {\r\n    employees: [],\r\n    roles: [],\r\n    selectedEmployee: {}\r\n}\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n    let { filters, prefilters } = state;\r\n    switch (action.type) {\r\n        case actionTypes.FEATCH_EMPLOYEES_OK:\r\n            return { ...state, employees: action.employees.employees, pageInfo: action.employees.pageInfo, prefilters: filters };\r\n        case actionTypes.FEATCH_ROLES_OK:\r\n            return { ...state, roles: action.roles };\r\n        case actionTypes.FEATCH_SELECTED_EMPLOYEE_OK:\r\n            return { ...state, selectedEmployee: action.selectedEmployee };\r\n        case actionTypes.FEATCH_EMPLOYEE_TOBE_CHANGE_OK:\r\n            return { ...state, employeeTobeChange: action.employeeTobeChange };\r\n        case actionTypes.FEATCH_EMPLOYEE_FOR_DISPLAY_OK:\r\n            return { ...state, employeeForDisplay: action.employeeForDisplay };\r\n        case actionTypes.CHANGE_FILTER:\r\n\r\n            let prefilters = filters;\r\n            if (action.value === '') {\r\n                try {\r\n                    delete filters[action.field]\r\n                    return { ...state, filters: filters };\r\n                } catch (error){\r\n                    return { ...state, filters: filters };\r\n                }\r\n            }\r\n            switch (action.field) {\r\n                case 'employeeName':\r\n                    filters = { ...filters, employeeName: action.value };\r\n                    break;\r\n                case 'EmployeeNumber':\r\n                    filters = { ...filters, EmployeeNumber: action.value };\r\n                    break;\r\n                case 'DateJoined':\r\n                    filters = { ...filters, DateJoined: action.value };\r\n                    break;\r\n                case 'Extension':\r\n                    filters = { ...filters, Extension: action.value };\r\n                    break;\r\n                case 'RoleName':\r\n                    filters = { ...filters, RoleName: action.value };\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            return { ...state, filters: filters, prefilters: prefilters };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dataReducer;"]},"metadata":{},"sourceType":"module"}