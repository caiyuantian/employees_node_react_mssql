{"ast":null,"code":"import _objectSpread from \"E:\\\\Ipedge\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport actionTypes from '../actionTypes';\nconst initialState = {\n  employees: [],\n  roles: [],\n  selectedEmployee: {}\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FEATCH_EMPLOYEES_OK:\n      return _objectSpread({}, state, {\n        employees: action.employees.employees,\n        pageInfo: action.employees.pageInfo\n      });\n\n    case actionTypes.FEATCH_ROLES_OK:\n      return _objectSpread({}, state, {\n        roles: action.roles\n      });\n\n    case actionTypes.FEATCH_SELECTED_EMPLOYEE_OK:\n      return _objectSpread({}, state, {\n        selectedEmployee: action.selectedEmployee\n      });\n\n    case actionTypes.FEATCH_EMPLOYEE_TOBE_CHANGE_OK:\n      return _objectSpread({}, state, {\n        employeeTobeChange: action.employeeTobeChange\n      });\n\n    case actionTypes.FEATCH_EMPLOYEE_FOR_DISPLAY_OK:\n      return _objectSpread({}, state, {\n        employeeForDisplay: action.employeeForDisplay\n      });\n\n    case actionTypes.CHANGE_FILTER:\n      let filters = state.filters;\n\n      switch (action.field) {\n        case 'employeeName':\n          filters = _objectSpread({}, filters, {\n            employeeName: action.value\n          });\n          break;\n\n        case 'EmployeeNumber':\n          filters = _objectSpread({}, filters, {\n            EmployeeNumber: action.value\n          });\n          break;\n\n        case 'DateJoined':\n          filters = _objectSpread({}, filters, {\n            DateJoined: action.value\n          });\n          break;\n\n        case 'Extension':\n          filters = _objectSpread({}, filters, {\n            Extension: action.value\n          });\n          break;\n\n        case 'RoleName':\n          filters = _objectSpread({}, filters, {\n            RoleName: action.value\n          });\n          break;\n      }\n\n      return _objectSpread({}, state, {\n        filters: newfilters\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;","map":{"version":3,"sources":["E:\\Ipedge\\frontend\\src\\reducers\\dataReducer.js"],"names":["actionTypes","initialState","employees","roles","selectedEmployee","dataReducer","state","action","type","FEATCH_EMPLOYEES_OK","pageInfo","FEATCH_ROLES_OK","FEATCH_SELECTED_EMPLOYEE_OK","FEATCH_EMPLOYEE_TOBE_CHANGE_OK","employeeTobeChange","FEATCH_EMPLOYEE_FOR_DISPLAY_OK","employeeForDisplay","CHANGE_FILTER","filters","field","employeeName","value","EmployeeNumber","DateJoined","Extension","RoleName","newfilters"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,gBAAgB,EAAE;AAHD,CAArB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,WAAW,CAACS,mBAAjB;AACI,+BAAYH,KAAZ;AAAmBJ,QAAAA,SAAS,EAAEK,MAAM,CAACL,SAAP,CAAiBA,SAA/C;AAA0DQ,QAAAA,QAAQ,EAAEH,MAAM,CAACL,SAAP,CAAiBQ;AAArF;;AACJ,SAAKV,WAAW,CAACW,eAAjB;AACI,+BAAYL,KAAZ;AAAmBH,QAAAA,KAAK,EAAEI,MAAM,CAACJ;AAAjC;;AACJ,SAAKH,WAAW,CAACY,2BAAjB;AACI,+BAAYN,KAAZ;AAAmBF,QAAAA,gBAAgB,EAAEG,MAAM,CAACH;AAA5C;;AACJ,SAAKJ,WAAW,CAACa,8BAAjB;AACI,+BAAYP,KAAZ;AAAmBQ,QAAAA,kBAAkB,EAAEP,MAAM,CAACO;AAA9C;;AACJ,SAAKd,WAAW,CAACe,8BAAjB;AACI,+BAAYT,KAAZ;AAAmBU,QAAAA,kBAAkB,EAAET,MAAM,CAACS;AAA9C;;AACJ,SAAKhB,WAAW,CAACiB,aAAjB;AAAA,UACUC,OADV,GACsBZ,KADtB,CACUY,OADV;;AAEI,cAAQX,MAAM,CAACY,KAAf;AACI,aAAK,cAAL;AACID,UAAAA,OAAO,qBAAQA,OAAR;AAAiBE,YAAAA,YAAY,EAAEb,MAAM,CAACc;AAAtC,YAAP;AACA;;AACJ,aAAK,gBAAL;AACIH,UAAAA,OAAO,qBAAQA,OAAR;AAAiBI,YAAAA,cAAc,EAAEf,MAAM,CAACc;AAAxC,YAAP;AACA;;AACJ,aAAK,YAAL;AACIH,UAAAA,OAAO,qBAAQA,OAAR;AAAiBK,YAAAA,UAAU,EAAEhB,MAAM,CAACc;AAApC,YAAP;AACA;;AACJ,aAAK,WAAL;AACIH,UAAAA,OAAO,qBAAQA,OAAR;AAAiBM,YAAAA,SAAS,EAAEjB,MAAM,CAACc;AAAnC,YAAP;AACA;;AACJ,aAAK,UAAL;AACIH,UAAAA,OAAO,qBAAQA,OAAR;AAAiBO,YAAAA,QAAQ,EAAElB,MAAM,CAACc;AAAlC,YAAP;AACA;AAfR;;AAkBA,+BAAYf,KAAZ;AAAmBY,QAAAA,OAAO,EAAEQ;AAA5B;;AACJ;AACI,aAAOpB,KAAP;AAjCR;AAmCH,CApCD;;AAsCA,eAAeD,WAAf","sourcesContent":["import actionTypes from '../actionTypes'\r\n\r\nconst initialState = {\r\n    employees: [],\r\n    roles: [],\r\n    selectedEmployee: {}\r\n}\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FEATCH_EMPLOYEES_OK:\r\n            return { ...state, employees: action.employees.employees, pageInfo: action.employees.pageInfo };\r\n        case actionTypes.FEATCH_ROLES_OK:\r\n            return { ...state, roles: action.roles };\r\n        case actionTypes.FEATCH_SELECTED_EMPLOYEE_OK:\r\n            return { ...state, selectedEmployee: action.selectedEmployee };\r\n        case actionTypes.FEATCH_EMPLOYEE_TOBE_CHANGE_OK:\r\n            return { ...state, employeeTobeChange: action.employeeTobeChange };\r\n        case actionTypes.FEATCH_EMPLOYEE_FOR_DISPLAY_OK:\r\n            return { ...state, employeeForDisplay: action.employeeForDisplay };\r\n        case actionTypes.CHANGE_FILTER:\r\n            let { filters } = state;\r\n            switch (action.field) {\r\n                case 'employeeName':\r\n                    filters = { ...filters, employeeName: action.value };\r\n                    break;\r\n                case 'EmployeeNumber':\r\n                    filters = { ...filters, EmployeeNumber: action.value };\r\n                    break;\r\n                case 'DateJoined':\r\n                    filters = { ...filters, DateJoined: action.value };\r\n                    break;\r\n                case 'Extension':\r\n                    filters = { ...filters, Extension: action.value };\r\n                    break;\r\n                case 'RoleName':\r\n                    filters = { ...filters, RoleName: action.value };\r\n                    break;\r\n            }\r\n\r\n            return { ...state, filters: newfilters };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dataReducer;"]},"metadata":{},"sourceType":"module"}