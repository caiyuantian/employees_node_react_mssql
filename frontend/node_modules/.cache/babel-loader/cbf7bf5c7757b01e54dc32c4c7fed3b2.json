{"ast":null,"code":"import _objectSpread from \"E:\\\\Ipedge\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport actionTypes from '../actionTypes';\nconst initialState = {\n  employees: [],\n  roles: [] //filter the select records\n\n};\n\nconst multiFilter = (data, filters) => {\n  const filterKeys = Object.keys(filters);\n\n  if (filterKeys.length === 0) {\n    return data;\n  }\n\n  return data.filter(item => {\n    return filterKeys.some(key => {\n      //.every for case need to match two filters, .some only need to match anyone\n      //if(!filters[key].length){\n      //    return true;\n      //} \n      return !!~filters[key].indexOf(item.address[key]);\n    });\n  });\n};\n\nconst dataReducer = (state = initialState, action) => {\n  let employees = state.employees,\n      roles = state.roles;\n\n  switch (action.type) {\n    case actionTypes.FEATCH_EMPLOYEES_OK:\n      return _objectSpread({}, state, {\n        employees: action.employees\n      });\n\n    case actionTypes.FEATCH_ROLES_OK:\n      return _objectSpread({}, state, {\n        employees: action.employees\n      });\n\n    case actionTypes.FEATCH_SELECTED_EMPLOYEE_OK:\n      console.log(JSON.stringify(selectedEmployee));\n      return _objectSpread({}, state, {\n        selectedEmployee: action.selectedEmployee\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;","map":{"version":3,"sources":["E:\\Ipedge\\frontend\\src\\reducers\\dataReducer.js"],"names":["actionTypes","initialState","employees","roles","multiFilter","data","filters","filterKeys","Object","keys","length","filter","item","some","key","indexOf","address","dataReducer","state","action","type","FEATCH_EMPLOYEES_OK","FEATCH_ROLES_OK","FEATCH_SELECTED_EMPLOYEE_OK","console","log","JSON","stringify","selectedEmployee"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,KAAK,EAAE,EAFU,CAKrB;;AALqB,CAArB;;AAMA,MAAMC,WAAW,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;AACnC,QAAMC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYH,OAAZ,CAAnB;;AACA,MAAIC,UAAU,CAACG,MAAX,KAAsB,CAA1B,EAA6B;AACzB,WAAOL,IAAP;AACH;;AACD,SAAOA,IAAI,CAACM,MAAL,CAAaC,IAAD,IAAU;AACzB,WAAOL,UAAU,CAACM,IAAX,CAAgBC,GAAG,IAAI;AAAE;AAC5B;AACA;AACA;AACA,aAAO,CAAC,CAAC,CAACR,OAAO,CAACQ,GAAD,CAAP,CAAaC,OAAb,CAAqBH,IAAI,CAACI,OAAL,CAAaF,GAAb,CAArB,CAAV;AACH,KALM,CAAP;AAMH,GAPM,CAAP;AAQH,CAbD;;AAeA,MAAMG,WAAW,GAAG,CAACC,KAAK,GAAGjB,YAAT,EAAuBkB,MAAvB,KAAkC;AAAA,MAC5CjB,SAD4C,GACvBgB,KADuB,CAC5ChB,SAD4C;AAAA,MACjCC,KADiC,GACvBe,KADuB,CACjCf,KADiC;;AAElD,UAAQgB,MAAM,CAACC,IAAf;AACI,SAAKpB,WAAW,CAACqB,mBAAjB;AACI,+BAAYH,KAAZ;AAAmBhB,QAAAA,SAAS,EAAEiB,MAAM,CAACjB;AAArC;;AACJ,SAAKF,WAAW,CAACsB,eAAjB;AACI,+BAAYJ,KAAZ;AAAmBhB,QAAAA,SAAS,EAAEiB,MAAM,CAACjB;AAArC;;AACJ,SAAKF,WAAW,CAACuB,2BAAjB;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeC,gBAAf,CAAZ;AACA,+BAAYV,KAAZ;AAAmBU,QAAAA,gBAAgB,EAAET,MAAM,CAACS;AAA5C;;AACJ;AACI,aAAOV,KAAP;AATR;AAWH,CAbD;;AAeA,eAAeD,WAAf","sourcesContent":["import actionTypes from '../actionTypes'\r\n\r\nconst initialState = {\r\n    employees: [],\r\n    roles: []\r\n}\r\n\r\n//filter the select records\r\nconst multiFilter = (data, filters) => {\r\n    const filterKeys = Object.keys(filters);\r\n    if (filterKeys.length === 0) {\r\n        return data;\r\n    }\r\n    return data.filter((item) => {\r\n        return filterKeys.some(key => { //.every for case need to match two filters, .some only need to match anyone\r\n            //if(!filters[key].length){\r\n            //    return true;\r\n            //} \r\n            return !!~filters[key].indexOf(item.address[key]);\r\n        })\r\n    })\r\n}\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n    let { employees, roles } = state;\r\n    switch (action.type) {\r\n        case actionTypes.FEATCH_EMPLOYEES_OK:\r\n            return { ...state, employees: action.employees };\r\n        case actionTypes.FEATCH_ROLES_OK:\r\n            return { ...state, employees: action.employees };\r\n        case actionTypes.FEATCH_SELECTED_EMPLOYEE_OK:\r\n            console.log(JSON.stringify(selectedEmployee));\r\n            return { ...state, selectedEmployee: action.selectedEmployee };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dataReducer;"]},"metadata":{},"sourceType":"module"}