{"ast":null,"code":"import { put, takeEvery, call } from 'redux-saga/effects';\nimport actionTypes from '../actionTypes';\nexport function* clickChangeEmployeeAsync(action) {\n  let EmployeeID = action.value;\n\n  try {\n    console.log('http://localhost:5000/api/v1/employee/' + EmployeeID);\n    const response = yield call(fetch, 'http://localhost:5000/api/v1/employee/' + EmployeeID);\n    const employee = yield call([response, 'json']);\n\n    if (!!employee) {\n      yield put({\n        type: actionTypes.FEATCH_SELECTED_EMPLOYEE_OK,\n        selectedEmployee: employee\n      });\n    } //return data[0].usernameName;\n\n  } catch (e) {\n    console.log(e); //return null;\n  }\n}\nexport function* watchClickChangeEmployee() {\n  yield takeEvery(actionTypes.CLICK_CHANGE_EMPLOYEE_ASYNC, clickChangeEmployeeAsync);\n}","map":{"version":3,"sources":["E:\\Ipedge\\frontend\\src\\sagas\\changeEmployee.js"],"names":["put","takeEvery","call","actionTypes","clickChangeEmployeeAsync","action","EmployeeID","value","console","log","response","fetch","employee","type","FEATCH_SELECTED_EMPLOYEE_OK","selectedEmployee","e","watchClickChangeEmployee","CLICK_CHANGE_EMPLOYEE_ASYNC"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAGA,OAAO,UAAUC,wBAAV,CAAmCC,MAAnC,EAA2C;AAC9C,MAAIC,UAAU,GAAGD,MAAM,CAACE,KAAxB;;AACA,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,2CAAyCH,UAArD;AACA,UAAMI,QAAQ,GAAG,MAAMR,IAAI,CAACS,KAAD,EAAQ,2CAAyCL,UAAjD,CAA3B;AACA,UAAMM,QAAQ,GAAG,MAAMV,IAAI,CAAC,CAACQ,QAAD,EAAW,MAAX,CAAD,CAA3B;;AACA,QAAI,CAAC,CAACE,QAAN,EAAgB;AACZ,YAAMZ,GAAG,CAAC;AAAEa,QAAAA,IAAI,EAAEV,WAAW,CAACW,2BAApB;AAAiDC,QAAAA,gBAAgB,EAAEH;AAAnE,OAAD,CAAT;AACH,KAND,CAOA;;AACH,GARD,CAQE,OAAOI,CAAP,EAAU;AACRR,IAAAA,OAAO,CAACC,GAAR,CAAYO,CAAZ,EADQ,CAER;AACH;AACJ;AAED,OAAO,UAAUC,wBAAV,GAAqC;AACxC,QAAMhB,SAAS,CAACE,WAAW,CAACe,2BAAb,EAA0Cd,wBAA1C,CAAf;AACH","sourcesContent":["import { put, takeEvery, call } from 'redux-saga/effects'\r\nimport actionTypes from '../actionTypes'\r\n\r\n\r\nexport function* clickChangeEmployeeAsync(action) {\r\n    let EmployeeID = action.value;\r\n    try {\r\n        console.log('http://localhost:5000/api/v1/employee/'+EmployeeID);\r\n        const response = yield call(fetch, 'http://localhost:5000/api/v1/employee/'+EmployeeID);\r\n        const employee = yield call([response, 'json']);\r\n        if (!!employee) {\r\n            yield put({ type: actionTypes.FEATCH_SELECTED_EMPLOYEE_OK, selectedEmployee: employee});\r\n        }\r\n        //return data[0].usernameName;\r\n    } catch (e) {\r\n        console.log(e);\r\n        //return null;\r\n    }\r\n}\r\n\r\nexport function* watchClickChangeEmployee() {\r\n    yield takeEvery(actionTypes.CLICK_CHANGE_EMPLOYEE_ASYNC, clickChangeEmployeeAsync);\r\n}"]},"metadata":{},"sourceType":"module"}