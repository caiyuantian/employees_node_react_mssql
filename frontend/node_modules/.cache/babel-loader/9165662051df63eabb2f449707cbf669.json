{"ast":null,"code":"var _jsxFileName = \"E:\\\\Ipedge\\\\frontend\\\\src\\\\components\\\\changeEmployee.js\";\nimport React from 'react';\nimport store from '../store';\nimport actionTypes from '../actionTypes';\n\nclass ChangeEmployee extends React.Component {\n  componentDidMount() {\n    store.dispatch({\n      type: actionTypes.FETCH_EMPLOYEES_ASYNC,\n      query: this.props.location.pathname\n    });\n  }\n\n  render() {\n    let employeeTobeChange = this.props.employeeTobeChange;\n    let detailItems = '';\n\n    if (!!employeeTobeChange) {\n      detailItems = React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"ID: \", employeeTobeChange.EmployeeID)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Employee Number: \", employeeTobeChange.EmployeeNumber)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Employee Name: \", employeeTobeChange.FirstName, \" \", employeeTobeChange.LastName, \" \")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Date Joined: \", employeeTobeChange.DateJoined)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Extension: \", employeeTobeChange.Extension)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"RoleName: \", employeeTobeChange.Role !== null ? employeeTobeChange.RoleID : null)));\n    }\n\n    return React.createElement(\"div\", {\n      id: \"employee-detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, detailItems);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  let _state$dataReducer = state.dataReducer,\n      employees = _state$dataReducer.employees,\n      pageInfo = _state$dataReducer.pageInfo;\n  return {\n    employees: employees,\n    pageInfo: pageInfo\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClickChangeEmployee: bindActionCreators(onClickEmployee, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangeEmployee);","map":{"version":3,"sources":["E:\\Ipedge\\frontend\\src\\components\\changeEmployee.js"],"names":["React","store","actionTypes","ChangeEmployee","Component","componentDidMount","dispatch","type","FETCH_EMPLOYEES_ASYNC","query","props","location","pathname","render","employeeTobeChange","detailItems","EmployeeID","EmployeeNumber","FirstName","LastName","DateJoined","Extension","Role","RoleID","mapStateToProps","state","dataReducer","employees","pageInfo","mapDispatchToProps","onClickChangeEmployee","bindActionCreators","onClickEmployee","connect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AACzCC,EAAAA,iBAAiB,GAAG;AAChBJ,IAAAA,KAAK,CAACK,QAAN,CAAe;AAACC,MAAAA,IAAI,EAAEL,WAAW,CAACM,qBAAnB;AAA0CC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,QAAX,CAAoBC;AAArE,KAAf;AACH;;AACDC,EAAAA,MAAM,GAAG;AAAA,QACCC,kBADD,GACwB,KAAKJ,KAD7B,CACCI,kBADD;AAGL,QAAIC,WAAW,GAAG,EAAlB;;AACA,QAAI,CAAC,CAACD,kBAAN,EAA0B;AACtBC,MAAAA,WAAW,GACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAASD,kBAAkB,CAACE,UAA5B,CADJ,CADA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAsBF,kBAAkB,CAACG,cAAzC,CADJ,CAJA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAoBH,kBAAkB,CAACI,SAAvC,OAAmDJ,kBAAkB,CAACK,QAAtE,MADJ,CAPA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAkBL,kBAAkB,CAACM,UAArC,CADJ,CAVA,EAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAgBN,kBAAkB,CAACO,SAAnC,CADJ,CAbA,EAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAeP,kBAAkB,CAACQ,IAAnB,KAA0B,IAA1B,GAA+BR,kBAAkB,CAACS,MAAlD,GAAyD,IAAxE,CADJ,CAhBA,CADJ;AAoBH;;AACD,WACI;AAAK,MAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACSR,WADT,CADJ;AAKH;;AAnCwC;;AAsC7C,MAAMS,eAAe,GAAIC,KAAD,IAAW;AAAA,2BACDA,KAAK,CAACC,WADL;AAAA,MACzBC,SADyB,sBACzBA,SADyB;AAAA,MACdC,QADc,sBACdA,QADc;AAE/B,SAAO;AACHD,IAAAA,SAAS,EAAEA,SADR;AACmBC,IAAAA,QAAQ,EAAEA;AAD7B,GAAP;AAGH,CALD;;AAOA,MAAMC,kBAAkB,GAAIvB,QAAD,IAAc;AACrC,SAAO;AACHwB,IAAAA,qBAAqB,EAAEC,kBAAkB,CAACC,eAAD,EAAkB1B,QAAlB;AADtC,GAAP;AAGH,CAJD;;AAMA,eAAe2B,OAAO,CAACT,eAAD,EAAkBK,kBAAlB,CAAP,CAA6C1B,cAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport store from '../store'\r\nimport actionTypes from '../actionTypes'\r\n\r\nclass ChangeEmployee extends React.Component {\r\n    componentDidMount() {\r\n        store.dispatch({type: actionTypes.FETCH_EMPLOYEES_ASYNC, query: this.props.location.pathname});\r\n    }\r\n    render() {\r\n        let { employeeTobeChange } = this.props;\r\n\r\n        let detailItems = '';\r\n        if (!!employeeTobeChange) {\r\n            detailItems = (\r\n                <table>\r\n                <tr>\r\n                    <td>ID: {employeeTobeChange.EmployeeID}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Employee Number: {employeeTobeChange.EmployeeNumber}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Employee Name: {employeeTobeChange.FirstName} {employeeTobeChange.LastName} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Date Joined: {employeeTobeChange.DateJoined}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Extension: {employeeTobeChange.Extension}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>RoleName: {employeeTobeChange.Role!==null?employeeTobeChange.RoleID:null}</td>\r\n                </tr></table>);\r\n        }\r\n        return (\r\n            <div id=\"employee-detail\">\r\n                    {detailItems}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let { employees, pageInfo } = state.dataReducer\r\n    return {\r\n        employees: employees, pageInfo: pageInfo, \r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onClickChangeEmployee: bindActionCreators(onClickEmployee, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangeEmployee)"]},"metadata":{},"sourceType":"module"}