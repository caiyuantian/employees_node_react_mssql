{"ast":null,"code":"import _objectSpread from \"E:\\\\projects\\\\redux_demo2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport actionTypes from '../actionTypes';\nconst initialState = {\n  userInfo: {}\n};\n\nconst countryList = data => {\n  var lookup = {};\n  var items = data;\n  var result = [];\n\n  for (var item, i = 0; item = items[i++];) {\n    var country = item.address.country;\n\n    if (!(country in lookup)) {\n      lookup[country] = 1;\n      result.push(country);\n    }\n  }\n\n  return result;\n};\n\nconst cityList = data => {\n  var lookup = {};\n  var items = data;\n  var result = [];\n\n  for (var item, i = 0; item = items[i++];) {\n    var city = item.address.city;\n\n    if (!(city in lookup)) {\n      lookup[city] = 1;\n      result.push(city);\n    }\n  }\n\n  return result;\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FEATCH_USER_OK:\n      return _objectSpread({}, state, {\n        userInfo: action.user\n      });\n\n    case actionTypes.FEATCH_DATA_OK:\n      let countries = countryList(action.data);\n      let cities = cityList(action.data);\n      return _objectSpread({}, state, {\n        data: action.data,\n        countries: countries,\n        cities: cities\n      });\n\n    case actionTypes.CLICK_COUNTRY:\n      let filters = state.filters;\n      countries = filters.countries;\n      let country = action.value;\n      let pos = countries.indexOf(country);\n\n      if (pos < 0) {\n        countries.push(country);\n      } else {\n        countries.splice(pos, 1);\n      }\n\n      filters = _objectSpread({}, filters, {\n        countries: countries\n      });\n      return _objectSpread({}, state, {\n        filters: filters\n      });\n\n    case actionTypes.CLICK_CITY:\n      filters = state.filters;\n      cities = filters.cities;\n      let city = action.value;\n      pos = cities.indexOf(city);\n\n      if (pos < 0) {\n        cities.push(city);\n      } else {\n        cities.splice(pos, 1);\n      }\n\n      filters = _objectSpread({}, filters, {\n        cities: cities\n      });\n      return _objectSpread({}, state, {\n        filters: filters\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;","map":{"version":3,"sources":["E:\\projects\\redux_demo2\\src\\reducers\\dataReducer.js"],"names":["actionTypes","initialState","userInfo","countryList","data","lookup","items","result","item","i","country","address","push","cityList","city","dataReducer","state","action","type","FEATCH_USER_OK","user","FEATCH_DATA_OK","countries","cities","CLICK_COUNTRY","filters","value","pos","indexOf","splice","CLICK_CITY"],"mappings":"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","sourcesContent":["import actionTypes from '../actionTypes'\r\n\r\nconst initialState = {\r\n    userInfo: {}\r\n}\r\n\r\nconst countryList = (data) => {\r\n    var lookup = {};\r\n    var items = data;\r\n    var result = [];\r\n\r\n    for (var item, i = 0; item = items[i++];) {\r\n        var country = item.address.country;\r\n\r\n        if (!(country in lookup)) {\r\n            lookup[country] = 1;\r\n            result.push(country);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nconst cityList = (data) => {\r\n    var lookup = {};\r\n    var items = data;\r\n    var result = [];\r\n\r\n    for (var item, i = 0; item = items[i++];) {\r\n        var city = item.address.city;\r\n\r\n        if (!(city in lookup)) {\r\n            lookup[city] = 1;\r\n            result.push(city);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FEATCH_USER_OK:\r\n            return { ...state, userInfo: action.user };\r\n        case actionTypes.FEATCH_DATA_OK:\r\n            let countries = countryList(action.data)\r\n            let cities = cityList(action.data)\r\n            return { ...state, data: action.data, countries: countries, cities: cities };\r\n        case actionTypes.CLICK_COUNTRY:\r\n            let filters = state.filters;\r\n            countries = filters.countries;\r\n            let country = action.value;\r\n            let pos = countries.indexOf(country);\r\n            if (pos < 0) {\r\n                countries.push(country)\r\n            } else {\r\n                countries.splice(pos, 1)\r\n            }\r\n            filters = { ...filters, countries: countries }\r\n            return { ...state, filters: filters };\r\n\r\n        case actionTypes.CLICK_CITY:\r\n            filters = state.filters;\r\n            cities = filters.cities;\r\n            let city = action.value;\r\n            pos = cities.indexOf(city);\r\n            if (pos < 0) {\r\n                cities.push(city)\r\n            } else {\r\n                cities.splice(pos, 1)\r\n            }\r\n            filters = { ...filters, cities: cities }\r\n            return { ...state, filters: filters };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dataReducer;"]},"metadata":{},"sourceType":"module"}