{"ast":null,"code":"import _objectSpread from \"E:\\\\projects\\\\redux_demo2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"E:\\\\projects\\\\redux_demo2\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider, connect } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { put, takeEvery, delay, all } from 'redux-saga/effects';\n\nclass Counter extends React.Component {\n  render() {\n    let _this$props = this.props,\n        value = _this$props.value,\n        onClickAdd = _this$props.onClickAdd,\n        onClickSubstract = _this$props.onClickSubstract;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, value), React.createElement(\"button\", {\n      onClick: onClickAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"\\u52A01\"), React.createElement(\"button\", {\n      onClick: onClickSubstract,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"\\u51CF1\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    value: state.value\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClickAdd: () => dispatch({\n      type: \"CLICK_ADD_ASYNC\"\n    }),\n    onClickSubstract: () => dispatch({\n      type: \"CLICK_SUBSTRACT_ASYNC\"\n    })\n  };\n};\n\nconst Example = connect(mapStateToProps, mapDispatchToProps)(Counter);\n\nconst myReducer = (state = {\n  value: 0\n}, action) => {\n  let value = state.value;\n\n  switch (action.type) {\n    case \"CLICK_ADD\":\n      return _objectSpread({}, state, {\n        value: value + 1\n      });\n\n    case \"CLICK_SUBSTRACT\":\n      return _objectSpread({}, state, {\n        value: value - 1\n      });\n\n    default:\n      return state;\n  }\n};\n\nfunction* substractAsync() {\n  yield delay(2000);\n  yield put({\n    type: 'CLICK_SUBSTRACT'\n  });\n}\n\nfunction* watchSubstractAsync() {\n  yield takeEvery('CLICK_SUBSTRACT_ASYNC', substractAsync);\n}\n\nfunction* addAsync() {\n  yield delay(2000);\n  yield put({\n    type: 'CLICK_ADD'\n  });\n}\n\nfunction* watchAddAsync() {\n  yield takeEvery('CLICK_ADD_ASYNC', addAsync);\n}\n\nfunction* rootSaga() {\n  yield all([watchAddAsync(), watchSubstractAsync()]);\n}\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(myReducer, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}, React.createElement(Example, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["E:\\projects\\redux_demo2\\src\\index.js"],"names":["React","ReactDOM","App","serviceWorker","Provider","connect","createStore","combineReducers","applyMiddleware","createSagaMiddleware","put","takeEvery","delay","all","Counter","Component","render","props","value","onClickAdd","onClickSubstract","mapStateToProps","state","mapDispatchToProps","dispatch","type","Example","myReducer","action","substractAsync","watchSubstractAsync","addAsync","watchAddAsync","rootSaga","sagaMiddleware","store","run","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider, connect } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { put, takeEvery, delay, all } from 'redux-saga/effects'\n\n\nclass Counter extends React.Component {\n    render() {\n        let { value, onClickAdd, onClickSubstract } = this.props;\n        return (\n            <div>\n                <p>{value}</p>\n                <button onClick={onClickAdd}>加1</button>\n                <button onClick={onClickSubstract}>减1</button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { value: state.value };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onClickAdd: () => dispatch({ type: \"CLICK_ADD_ASYNC\" }),\n        onClickSubstract: () => dispatch({ type: \"CLICK_SUBSTRACT_ASYNC\" })\n    }\n}\n\nconst Example = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Counter);\n\nconst myReducer = (state = { value: 0 }, action) => {\n    let value = state.value;\n    switch (action.type) {\n        case \"CLICK_ADD\":\n            return { ...state, value: value + 1 };\n        case \"CLICK_SUBSTRACT\":\n            return { ...state, value: value - 1 };\n        default:\n            return state;\n    }\n}\n\nfunction* substractAsync() {\n    yield delay(2000);\n    yield put({type: 'CLICK_SUBSTRACT'})\n}\n\nfunction* watchSubstractAsync() {\n    yield takeEvery('CLICK_SUBSTRACT_ASYNC', substractAsync);\n}\n\nfunction* addAsync() {\n    yield delay(2000);\n    yield put({ type: 'CLICK_ADD' })\n}\n\nfunction* watchAddAsync() {\n    yield takeEvery('CLICK_ADD_ASYNC', addAsync);\n}\n\nfunction* rootSaga() {\n    yield all([\n        watchAddAsync(),\n        watchSubstractAsync()\n    ]);\n}\n\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(myReducer, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n    <Provider store={store}>\n        <Example />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}