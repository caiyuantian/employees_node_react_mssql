{"ast":null,"code":"import { put, takeEvery, call } from 'redux-saga/effects';\nimport actionTypes from '../actionTypes';\nexport function* createEmployeeAsync(action) {\n  let data = {\n    EmployeeNumber: action.EmployeeNumber,\n    FirstName: action.FirstName,\n    LastName: action.LastName,\n    Extension: action.Extension,\n    RoleID: action.RoleID\n  };\n  console.log(JSON.stringify(data));\n\n  try {\n    //console.log('http://localhost:5000/api/v1/employee/'+EmployeeID);\n    const response = yield call(fetch, 'http://localhost:5000/api/v1/employees', {\n      body: JSON.stringify(data),\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    });\n    const employee = yield call([response, 'json']);\n\n    if (!!employee) {} //yield put({ type: actionTypes.FEATCH_EMPLOYEE_FOR_DISPLAY_OK, employeeForDisplay: employee});\n    //return data[0].usernameName;\n\n  } catch (e) {\n    console.log(e); //return null;\n  }\n}\nexport function* createEmployeeFetchRolesAsync() {\n  try {\n    const response = yield call(fetch, 'http://localhost:5000/api/v1/roles');\n    const roles = yield call([response, 'json']);\n\n    if (!!roles) {\n      yield put({\n        type: actionTypes.FEATCH_ROLES_OK,\n        roles: roles\n      });\n    }\n  } catch (e) {\n    console.log(e);\n  }\n}\nexport function* watchCreateEmployee() {\n  yield takeEvery(actionTypes.CREATE_EMPLOYEE_FETCH_ROLES_ASYNC, createEmployeeFetchRolesAsync);\n  yield takeEvery(actionTypes.CREATE_EMPLOYEE_ASYNC, createEmployeeAsync);\n}","map":{"version":3,"sources":["E:\\Ipedge\\frontend\\src\\sagas\\createEmployee.js"],"names":["put","takeEvery","call","actionTypes","createEmployeeAsync","action","data","EmployeeNumber","FirstName","LastName","Extension","RoleID","console","log","JSON","stringify","response","fetch","body","method","headers","Headers","employee","e","createEmployeeFetchRolesAsync","roles","type","FEATCH_ROLES_OK","watchCreateEmployee","CREATE_EMPLOYEE_FETCH_ROLES_ASYNC","CREATE_EMPLOYEE_ASYNC"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAGA,OAAO,UAAUC,mBAAV,CAA8BC,MAA9B,EAAsC;AACzC,MAAIC,IAAI,GAAG;AACPC,IAAAA,cAAc,EAAEF,MAAM,CAACE,cADhB;AAEPC,IAAAA,SAAS,EAAEH,MAAM,CAACG,SAFX;AAGPC,IAAAA,QAAQ,EAAEJ,MAAM,CAACI,QAHV;AAIPC,IAAAA,SAAS,EAAEL,MAAM,CAACK,SAJX;AAKPC,IAAAA,MAAM,EAAEN,MAAM,CAACM;AALR,GAAX;AAOAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeT,IAAf,CAAZ;;AACA,MAAI;AACA;AACA,UAAMU,QAAQ,GAAG,MAAMd,IAAI,CAACe,KAAD,EAAQ,wCAAR,EAC3B;AAACC,MAAAA,IAAI,EAAEJ,IAAI,CAACC,SAAL,CAAeT,IAAf,CAAP;AAA6Ba,MAAAA,MAAM,EAAE,MAArC;AAA6CC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AAC9D,wBAAgB;AAD8C,OAAZ;AAAtD,KAD2B,CAA3B;AAIA,UAAMC,QAAQ,GAAG,MAAMpB,IAAI,CAAC,CAACc,QAAD,EAAW,MAAX,CAAD,CAA3B;;AACA,QAAI,CAAC,CAACM,QAAN,EAAgB,CAEf,CAFD,CACI;AAEJ;;AACH,GAXD,CAWE,OAAOC,CAAP,EAAU;AACRX,IAAAA,OAAO,CAACC,GAAR,CAAYU,CAAZ,EADQ,CAER;AACH;AACJ;AAED,OAAO,UAAUC,6BAAV,GAA0C;AAC7C,MAAI;AACA,UAAMR,QAAQ,GAAG,MAAMd,IAAI,CAACe,KAAD,EAAQ,oCAAR,CAA3B;AACA,UAAMQ,KAAK,GAAG,MAAMvB,IAAI,CAAC,CAACc,QAAD,EAAW,MAAX,CAAD,CAAxB;;AACA,QAAI,CAAC,CAACS,KAAN,EAAa;AACT,YAAMzB,GAAG,CAAC;AAAE0B,QAAAA,IAAI,EAAEvB,WAAW,CAACwB,eAApB;AAAqCF,QAAAA,KAAK,EAAEA;AAA5C,OAAD,CAAT;AACH;AACJ,GAND,CAME,OAAOF,CAAP,EAAU;AACRX,IAAAA,OAAO,CAACC,GAAR,CAAYU,CAAZ;AACH;AACJ;AAGD,OAAO,UAAUK,mBAAV,GAAgC;AACnC,QAAM3B,SAAS,CAACE,WAAW,CAAC0B,iCAAb,EAAgDL,6BAAhD,CAAf;AACA,QAAMvB,SAAS,CAACE,WAAW,CAAC2B,qBAAb,EAAoC1B,mBAApC,CAAf;AAEH","sourcesContent":["import { put, takeEvery, call } from 'redux-saga/effects'\r\nimport actionTypes from '../actionTypes'\r\n\r\n\r\nexport function* createEmployeeAsync(action) {\r\n    let data = {\r\n        EmployeeNumber: action.EmployeeNumber,\r\n        FirstName: action.FirstName,\r\n        LastName: action.LastName,\r\n        Extension: action.Extension,\r\n        RoleID: action.RoleID\r\n    }\r\n    console.log(JSON.stringify(data));\r\n    try {\r\n        //console.log('http://localhost:5000/api/v1/employee/'+EmployeeID);\r\n        const response = yield call(fetch, 'http://localhost:5000/api/v1/employees', \r\n        {body: JSON.stringify(data), method: 'POST', headers: new Headers({\r\n            'Content-Type': 'application/json'\r\n          })});\r\n        const employee = yield call([response, 'json']);\r\n        if (!!employee) {\r\n            //yield put({ type: actionTypes.FEATCH_EMPLOYEE_FOR_DISPLAY_OK, employeeForDisplay: employee});\r\n        }\r\n        //return data[0].usernameName;\r\n    } catch (e) {\r\n        console.log(e);\r\n        //return null;\r\n    }\r\n}\r\n\r\nexport function* createEmployeeFetchRolesAsync() {\r\n    try {\r\n        const response = yield call(fetch, 'http://localhost:5000/api/v1/roles');\r\n        const roles = yield call([response, 'json']);\r\n        if (!!roles) {\r\n            yield put({ type: actionTypes.FEATCH_ROLES_OK, roles: roles});\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n\r\nexport function* watchCreateEmployee() {\r\n    yield takeEvery(actionTypes.CREATE_EMPLOYEE_FETCH_ROLES_ASYNC, createEmployeeFetchRolesAsync);\r\n    yield takeEvery(actionTypes.CREATE_EMPLOYEE_ASYNC, createEmployeeAsync);\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}